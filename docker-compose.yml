version: "3.9"

services:
  heritage_graphql:
    container_name: heritage_graphql
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - 4000
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL_MODE: ${POSTGRES_SSL_MODE}
      OIDC_USERINFO_ENDPOINT: ${OIDC_USERINFO_ENDPOINT}
    depends_on:
      - heritage_postgres
      - heritage_redis
      - minio
    networks:
      - siberiana-network

  heritage_postgres:
    container_name: heritage_postgres
    build:
      context: .
      dockerfile: ./docker/Dockerfile.postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - siberiana-network

  heritage_redis:
    container_name: heritage_redis
    build:
      context: .
      dockerfile: ./docker/Dockerfile.redis
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - siberiana-network

  heritage_minio:
    container_name: heritage_minio
    build:
      context: .
      dockerfile: ./docker/Dockerfile.minio
    ports:
      - 9000
      - 9001
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_URL=${MINIO_SERVER_URL}
      - MINIO_SERVER_REDIRECT_URL=${MINIO_SERVER_REDIRECT_URL}
    volumes:
      - ./minio:/data
    command: server --console-address :9001 /data
    networks:
      - siberiana-network

volumes:
  heritage_cache:
  heritage_data:
  minio:

networks:
  siberiana-network:
    external: true
