directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Art implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  artGenre: [ArtGenre!]
  artStyle: [ArtStyle!]
}
"""A connection to a list of items."""
type ArtConnection {
  """A list of edges."""
  edges: [ArtEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ArtEdge {
  """The item at the end of the edge."""
  node: Art
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type ArtGenre implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  art: [Art!]
}
"""A connection to a list of items."""
type ArtGenreConnection {
  """A list of edges."""
  edges: [ArtGenreEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ArtGenreEdge {
  """The item at the end of the edge."""
  node: ArtGenre
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ArtGenre connections"""
input ArtGenreOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ArtGenres."""
  field: ArtGenreOrderField!
}
"""Properties by which ArtGenre connections can be ordered."""
enum ArtGenreOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ArtGenreWhereInput is used for filtering ArtGenre objects.
Input was generated by ent.
"""
input ArtGenreWhereInput {
  not: ArtGenreWhereInput
  and: [ArtGenreWhereInput!]
  or: [ArtGenreWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """art edge predicates"""
  hasArt: Boolean
  hasArtWith: [ArtWhereInput!]
}
"""Ordering options for Art connections"""
input ArtOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Arts."""
  field: ArtOrderField!
}
"""Properties by which Art connections can be ordered."""
enum ArtOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
type ArtStyle implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  art: [Art!]
}
"""A connection to a list of items."""
type ArtStyleConnection {
  """A list of edges."""
  edges: [ArtStyleEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ArtStyleEdge {
  """The item at the end of the edge."""
  node: ArtStyle
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ArtStyle connections"""
input ArtStyleOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ArtStyles."""
  field: ArtStyleOrderField!
}
"""Properties by which ArtStyle connections can be ordered."""
enum ArtStyleOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ArtStyleWhereInput is used for filtering ArtStyle objects.
Input was generated by ent.
"""
input ArtStyleWhereInput {
  not: ArtStyleWhereInput
  and: [ArtStyleWhereInput!]
  or: [ArtStyleWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """art edge predicates"""
  hasArt: Boolean
  hasArtWith: [ArtWhereInput!]
}
"""
ArtWhereInput is used for filtering Art objects.
Input was generated by ent.
"""
input ArtWhereInput {
  not: ArtWhereInput
  and: [ArtWhereInput!]
  or: [ArtWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """art_genre edge predicates"""
  hasArtGenre: Boolean
  hasArtGenreWith: [ArtGenreWhereInput!]
  """art_style edge predicates"""
  hasArtStyle: Boolean
  hasArtStyleWith: [ArtStyleWhereInput!]
}
type Artifact implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  deletedAt: Time
  deletedBy: String
  dating: String
  dimensions: String
  chemicalComposition: String
  number: String
  typology: String
  weight: String
  admissionDate: Time
  authors: [Person!]
  mediums: [Medium!]
  techniques: [Technique!]
  period: Period
  projects: [Project!]
  publications: [Publication!]
  holders: [Holder!]
  culturalAffiliation: Culture
  monument: Monument
  model: Model
  set: Set
  location: Location
  collection: Collection!
  license: License
}
"""A connection to a list of items."""
type ArtifactConnection {
  """A list of edges."""
  edges: [ArtifactEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ArtifactEdge {
  """The item at the end of the edge."""
  node: Artifact
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Artifact connections"""
input ArtifactOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Artifacts."""
  field: ArtifactOrderField!
}
"""Properties by which Artifact connections can be ordered."""
enum ArtifactOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ArtifactWhereInput is used for filtering Artifact objects.
Input was generated by ent.
"""
input ArtifactWhereInput {
  not: ArtifactWhereInput
  and: [ArtifactWhereInput!]
  or: [ArtifactWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """deleted_by field predicates"""
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """dating field predicates"""
  dating: String
  datingNEQ: String
  datingIn: [String!]
  datingNotIn: [String!]
  datingGT: String
  datingGTE: String
  datingLT: String
  datingLTE: String
  datingContains: String
  datingHasPrefix: String
  datingHasSuffix: String
  datingIsNil: Boolean
  datingNotNil: Boolean
  datingEqualFold: String
  datingContainsFold: String
  """dimensions field predicates"""
  dimensions: String
  dimensionsNEQ: String
  dimensionsIn: [String!]
  dimensionsNotIn: [String!]
  dimensionsGT: String
  dimensionsGTE: String
  dimensionsLT: String
  dimensionsLTE: String
  dimensionsContains: String
  dimensionsHasPrefix: String
  dimensionsHasSuffix: String
  dimensionsIsNil: Boolean
  dimensionsNotNil: Boolean
  dimensionsEqualFold: String
  dimensionsContainsFold: String
  """chemical_composition field predicates"""
  chemicalComposition: String
  chemicalCompositionNEQ: String
  chemicalCompositionIn: [String!]
  chemicalCompositionNotIn: [String!]
  chemicalCompositionGT: String
  chemicalCompositionGTE: String
  chemicalCompositionLT: String
  chemicalCompositionLTE: String
  chemicalCompositionContains: String
  chemicalCompositionHasPrefix: String
  chemicalCompositionHasSuffix: String
  chemicalCompositionIsNil: Boolean
  chemicalCompositionNotNil: Boolean
  chemicalCompositionEqualFold: String
  chemicalCompositionContainsFold: String
  """number field predicates"""
  number: String
  numberNEQ: String
  numberIn: [String!]
  numberNotIn: [String!]
  numberGT: String
  numberGTE: String
  numberLT: String
  numberLTE: String
  numberContains: String
  numberHasPrefix: String
  numberHasSuffix: String
  numberIsNil: Boolean
  numberNotNil: Boolean
  numberEqualFold: String
  numberContainsFold: String
  """typology field predicates"""
  typology: String
  typologyNEQ: String
  typologyIn: [String!]
  typologyNotIn: [String!]
  typologyGT: String
  typologyGTE: String
  typologyLT: String
  typologyLTE: String
  typologyContains: String
  typologyHasPrefix: String
  typologyHasSuffix: String
  typologyIsNil: Boolean
  typologyNotNil: Boolean
  typologyEqualFold: String
  typologyContainsFold: String
  """weight field predicates"""
  weight: String
  weightNEQ: String
  weightIn: [String!]
  weightNotIn: [String!]
  weightGT: String
  weightGTE: String
  weightLT: String
  weightLTE: String
  weightContains: String
  weightHasPrefix: String
  weightHasSuffix: String
  weightIsNil: Boolean
  weightNotNil: Boolean
  weightEqualFold: String
  weightContainsFold: String
  """admission_date field predicates"""
  admissionDate: Time
  admissionDateNEQ: Time
  admissionDateIn: [Time!]
  admissionDateNotIn: [Time!]
  admissionDateGT: Time
  admissionDateGTE: Time
  admissionDateLT: Time
  admissionDateLTE: Time
  admissionDateIsNil: Boolean
  admissionDateNotNil: Boolean
  """authors edge predicates"""
  hasAuthors: Boolean
  hasAuthorsWith: [PersonWhereInput!]
  """mediums edge predicates"""
  hasMediums: Boolean
  hasMediumsWith: [MediumWhereInput!]
  """techniques edge predicates"""
  hasTechniques: Boolean
  hasTechniquesWith: [TechniqueWhereInput!]
  """period edge predicates"""
  hasPeriod: Boolean
  hasPeriodWith: [PeriodWhereInput!]
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  """publications edge predicates"""
  hasPublications: Boolean
  hasPublicationsWith: [PublicationWhereInput!]
  """holders edge predicates"""
  hasHolders: Boolean
  hasHoldersWith: [HolderWhereInput!]
  """cultural_affiliation edge predicates"""
  hasCulturalAffiliation: Boolean
  hasCulturalAffiliationWith: [CultureWhereInput!]
  """monument edge predicates"""
  hasMonument: Boolean
  hasMonumentWith: [MonumentWhereInput!]
  """model edge predicates"""
  hasModel: Boolean
  hasModelWith: [ModelWhereInput!]
  """set edge predicates"""
  hasSet: Boolean
  hasSetWith: [SetWhereInput!]
  """location edge predicates"""
  hasLocation: Boolean
  hasLocationWith: [LocationWhereInput!]
  """collection edge predicates"""
  hasCollection: Boolean
  hasCollectionWith: [CollectionWhereInput!]
  """license edge predicates"""
  hasLicense: Boolean
  hasLicenseWith: [LicenseWhereInput!]
}
type AuditLog implements Node {
  id: ID!
  table: String
  refID: Int
  operation: String
  changes: [String!]
  addedEdges: [String!]
  removedEdges: [String!]
  clearedEdges: [String!]
  blame: String
  createdAt: Time!
}
"""A connection to a list of items."""
type AuditLogConnection {
  """A list of edges."""
  edges: [AuditLogEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AuditLogEdge {
  """The item at the end of the edge."""
  node: AuditLog
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for AuditLog connections"""
input AuditLogOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AuditLogs."""
  field: AuditLogOrderField!
}
"""Properties by which AuditLog connections can be ordered."""
enum AuditLogOrderField {
  CREATED_AT
}
"""
AuditLogWhereInput is used for filtering AuditLog objects.
Input was generated by ent.
"""
input AuditLogWhereInput {
  not: AuditLogWhereInput
  and: [AuditLogWhereInput!]
  or: [AuditLogWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """table field predicates"""
  table: String
  tableNEQ: String
  tableIn: [String!]
  tableNotIn: [String!]
  tableGT: String
  tableGTE: String
  tableLT: String
  tableLTE: String
  tableContains: String
  tableHasPrefix: String
  tableHasSuffix: String
  tableIsNil: Boolean
  tableNotNil: Boolean
  tableEqualFold: String
  tableContainsFold: String
  """ref_id field predicates"""
  refID: Int
  refIDNEQ: Int
  refIDIn: [Int!]
  refIDNotIn: [Int!]
  refIDGT: Int
  refIDGTE: Int
  refIDLT: Int
  refIDLTE: Int
  refIDIsNil: Boolean
  refIDNotNil: Boolean
  """operation field predicates"""
  operation: String
  operationNEQ: String
  operationIn: [String!]
  operationNotIn: [String!]
  operationGT: String
  operationGTE: String
  operationLT: String
  operationLTE: String
  operationContains: String
  operationHasPrefix: String
  operationHasSuffix: String
  operationIsNil: Boolean
  operationNotNil: Boolean
  operationEqualFold: String
  operationContainsFold: String
  """blame field predicates"""
  blame: String
  blameNEQ: String
  blameIn: [String!]
  blameNotIn: [String!]
  blameGT: String
  blameGTE: String
  blameLT: String
  blameLTE: String
  blameContains: String
  blameHasPrefix: String
  blameHasSuffix: String
  blameIsNil: Boolean
  blameNotNil: Boolean
  blameEqualFold: String
  blameContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
}
type Book implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  files: [String!]
  year: Int
  authors: [Person!]
  bookGenres: [BookGenre!]
  collection: Collection!
  holders: [Holder!]
  publisher: Publisher
  license: License
  location: Location
}
"""A connection to a list of items."""
type BookConnection {
  """A list of edges."""
  edges: [BookEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type BookEdge {
  """The item at the end of the edge."""
  node: Book
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type BookGenre implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  books: [Book!]
}
"""A connection to a list of items."""
type BookGenreConnection {
  """A list of edges."""
  edges: [BookGenreEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type BookGenreEdge {
  """The item at the end of the edge."""
  node: BookGenre
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for BookGenre connections"""
input BookGenreOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order BookGenres."""
  field: BookGenreOrderField!
}
"""Properties by which BookGenre connections can be ordered."""
enum BookGenreOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
BookGenreWhereInput is used for filtering BookGenre objects.
Input was generated by ent.
"""
input BookGenreWhereInput {
  not: BookGenreWhereInput
  and: [BookGenreWhereInput!]
  or: [BookGenreWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
}
"""Ordering options for Book connections"""
input BookOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Books."""
  field: BookOrderField!
}
"""Properties by which Book connections can be ordered."""
enum BookOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
BookWhereInput is used for filtering Book objects.
Input was generated by ent.
"""
input BookWhereInput {
  not: BookWhereInput
  and: [BookWhereInput!]
  or: [BookWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """year field predicates"""
  year: Int
  yearNEQ: Int
  yearIn: [Int!]
  yearNotIn: [Int!]
  yearGT: Int
  yearGTE: Int
  yearLT: Int
  yearLTE: Int
  yearIsNil: Boolean
  yearNotNil: Boolean
  """authors edge predicates"""
  hasAuthors: Boolean
  hasAuthorsWith: [PersonWhereInput!]
  """book_genres edge predicates"""
  hasBookGenres: Boolean
  hasBookGenresWith: [BookGenreWhereInput!]
  """collection edge predicates"""
  hasCollection: Boolean
  hasCollectionWith: [CollectionWhereInput!]
  """holders edge predicates"""
  hasHolders: Boolean
  hasHoldersWith: [HolderWhereInput!]
  """publisher edge predicates"""
  hasPublisher: Boolean
  hasPublisherWith: [PublisherWhereInput!]
  """license edge predicates"""
  hasLicense: Boolean
  hasLicenseWith: [LicenseWhereInput!]
  """location edge predicates"""
  hasLocation: Boolean
  hasLocationWith: [LocationWhereInput!]
}
type Category implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  slug: String!
  collections: [Collection!]
}
"""A connection to a list of items."""
type CategoryConnection {
  """A list of edges."""
  edges: [CategoryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Category connections"""
input CategoryOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Categories."""
  field: CategoryOrderField!
}
"""Properties by which Category connections can be ordered."""
enum CategoryOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
CategoryWhereInput is used for filtering Category objects.
Input was generated by ent.
"""
input CategoryWhereInput {
  not: CategoryWhereInput
  and: [CategoryWhereInput!]
  or: [CategoryWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """slug field predicates"""
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugEqualFold: String
  slugContainsFold: String
  """collections edge predicates"""
  hasCollections: Boolean
  hasCollectionsWith: [CollectionWhereInput!]
}
type Collection implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  slug: String!
  artifacts: [Artifact!]
  books: [Book!]
  people: [Person!]
  protectedAreaPictures: [ProtectedAreaPicture!]
  category: Category!
}
"""A connection to a list of items."""
type CollectionConnection {
  """A list of edges."""
  edges: [CollectionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type CollectionEdge {
  """The item at the end of the edge."""
  node: Collection
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Collection connections"""
input CollectionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Collections."""
  field: CollectionOrderField!
}
"""Properties by which Collection connections can be ordered."""
enum CollectionOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
CollectionWhereInput is used for filtering Collection objects.
Input was generated by ent.
"""
input CollectionWhereInput {
  not: CollectionWhereInput
  and: [CollectionWhereInput!]
  or: [CollectionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """slug field predicates"""
  slug: String
  slugNEQ: String
  slugIn: [String!]
  slugNotIn: [String!]
  slugGT: String
  slugGTE: String
  slugLT: String
  slugLTE: String
  slugContains: String
  slugHasPrefix: String
  slugHasSuffix: String
  slugEqualFold: String
  slugContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
  """people edge predicates"""
  hasPeople: Boolean
  hasPeopleWith: [PersonWhereInput!]
  """protected_area_pictures edge predicates"""
  hasProtectedAreaPictures: Boolean
  hasProtectedAreaPicturesWith: [ProtectedAreaPictureWhereInput!]
  """category edge predicates"""
  hasCategory: Boolean
  hasCategoryWith: [CategoryWhereInput!]
}
type Country implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locations: [Location!]
}
"""A connection to a list of items."""
type CountryConnection {
  """A list of edges."""
  edges: [CountryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type CountryEdge {
  """The item at the end of the edge."""
  node: Country
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Country connections"""
input CountryOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Countries."""
  field: CountryOrderField!
}
"""Properties by which Country connections can be ordered."""
enum CountryOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
CountryWhereInput is used for filtering Country objects.
Input was generated by ent.
"""
input CountryWhereInput {
  not: CountryWhereInput
  and: [CountryWhereInput!]
  or: [CountryWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """locations edge predicates"""
  hasLocations: Boolean
  hasLocationsWith: [LocationWhereInput!]
}
"""
CreateArtGenreInput is used for create ArtGenre object.
Input was generated by ent.
"""
input CreateArtGenreInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artIDs: [ID!]
}
"""
CreateArtInput is used for create Art object.
Input was generated by ent.
"""
input CreateArtInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  artGenreIDs: [ID!]
  artStyleIDs: [ID!]
}
"""
CreateArtStyleInput is used for create ArtStyle object.
Input was generated by ent.
"""
input CreateArtStyleInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artIDs: [ID!]
}
"""
CreateArtifactInput is used for create Artifact object.
Input was generated by ent.
"""
input CreateArtifactInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  deletedAt: Time
  deletedBy: String
  dating: String
  dimensions: String
  chemicalComposition: String
  number: String
  typology: String
  weight: String
  admissionDate: Time
  authorIDs: [ID!]
  mediumIDs: [ID!]
  techniqueIDs: [ID!]
  periodID: ID
  projectIDs: [ID!]
  publicationIDs: [ID!]
  holderIDs: [ID!]
  culturalAffiliationID: ID
  monumentID: ID
  modelID: ID
  setID: ID
  locationID: ID
  collectionID: ID!
  licenseID: ID
}
"""
CreateBookGenreInput is used for create BookGenre object.
Input was generated by ent.
"""
input CreateBookGenreInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  bookIDs: [ID!]
}
"""
CreateBookInput is used for create Book object.
Input was generated by ent.
"""
input CreateBookInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  files: [String!]
  year: Int
  authorIDs: [ID!]
  bookGenreIDs: [ID!]
  collectionID: ID!
  holderIDs: [ID!]
  publisherID: ID
  licenseID: ID
  locationID: ID
}
"""
CreateCategoryInput is used for create Category object.
Input was generated by ent.
"""
input CreateCategoryInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  slug: String!
  collectionIDs: [ID!]
}
"""
CreateCollectionInput is used for create Collection object.
Input was generated by ent.
"""
input CreateCollectionInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  slug: String!
  artifactIDs: [ID!]
  bookIDs: [ID!]
  personIDs: [ID!]
  protectedAreaPictureIDs: [ID!]
  categoryID: ID!
}
"""
CreateCountryInput is used for create Country object.
Input was generated by ent.
"""
input CreateCountryInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locationIDs: [ID!]
}
"""
CreateCultureInput is used for create Culture object.
Input was generated by ent.
"""
input CreateCultureInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
}
"""
CreateDistrictInput is used for create District object.
Input was generated by ent.
"""
input CreateDistrictInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locationIDs: [ID!]
}
"""
CreateHolderInput is used for create Holder object.
Input was generated by ent.
"""
input CreateHolderInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  beginData: Time!
  endDate: Time
  artifactIDs: [ID!]
  bookIDs: [ID!]
  holderResponsibilityIDs: [ID!]
  personID: ID
  organizationID: ID
}
"""
CreateHolderResponsibilityInput is used for create HolderResponsibility object.
Input was generated by ent.
"""
input CreateHolderResponsibilityInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  holderIDs: [ID!]
}
"""
CreateLicenseInput is used for create License object.
Input was generated by ent.
"""
input CreateLicenseInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
  bookIDs: [ID!]
  protectedAreaPictureIDs: [ID!]
}
"""
CreateLocationInput is used for create Location object.
Input was generated by ent.
"""
input CreateLocationInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  geometry: Geometry
  artifactIDs: [ID!]
  bookIDs: [ID!]
  protectedAreaPictureIDs: [ID!]
  countryID: ID
  districtID: ID
  settlementID: ID
  regionID: ID
}
"""
CreateMediumInput is used for create Medium object.
Input was generated by ent.
"""
input CreateMediumInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
}
"""
CreateModelInput is used for create Model object.
Input was generated by ent.
"""
input CreateModelInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
}
"""
CreateMonumentInput is used for create Monument object.
Input was generated by ent.
"""
input CreateMonumentInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
  setIDs: [ID!]
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  address: String
  phoneNumbers: [String!]
  emails: [String!]
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  previousNames: [String!]
  isInAConsortium: Boolean
  consortiumDocumentURL: String
  personIDs: [ID!]
  holderID: ID
  organizationTypeID: ID
}
"""
CreateOrganizationTypeInput is used for create OrganizationType object.
Input was generated by ent.
"""
input CreateOrganizationTypeInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  organizationIDs: [ID!]
}
"""
CreatePeriodInput is used for create Period object.
Input was generated by ent.
"""
input CreatePeriodInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
}
"""
CreatePersonInput is used for create Person object.
Input was generated by ent.
"""
input CreatePersonInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  address: String
  phoneNumbers: [String!]
  emails: [String!]
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  givenName: String
  familyName: String
  patronymicName: String
  beginData: Time
  endDate: Time
  gender: PersonGender!
  artifactIDs: [ID!]
  bookIDs: [ID!]
  projectIDs: [ID!]
  publicationIDs: [ID!]
  personRoleIDs: [ID!]
  holderID: ID
  affiliationID: ID
  collectionsID: ID
}
"""
CreatePersonRoleInput is used for create PersonRole object.
Input was generated by ent.
"""
input CreatePersonRoleInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  personIDs: [ID!]
}
"""
CreateProjectInput is used for create Project object.
Input was generated by ent.
"""
input CreateProjectInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  beginData: Time
  endDate: Time
  artifactIDs: [ID!]
  teamIDs: [ID!]
  projectTypeID: ID
}
"""
CreateProjectTypeInput is used for create ProjectType object.
Input was generated by ent.
"""
input CreateProjectTypeInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  projectIDs: [ID!]
}
"""
CreateProtectedAreaCategoryInput is used for create ProtectedAreaCategory object.
Input was generated by ent.
"""
input CreateProtectedAreaCategoryInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  protectedAreaIDs: [ID!]
}
"""
CreateProtectedAreaInput is used for create ProtectedArea object.
Input was generated by ent.
"""
input CreateProtectedAreaInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  area: String
  establishmentDate: Time
  protectedAreaPictureIDs: [ID!]
  protectedAreaCategoryID: ID
}
"""
CreateProtectedAreaPictureInput is used for create ProtectedAreaPicture object.
Input was generated by ent.
"""
input CreateProtectedAreaPictureInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  shootingDate: Time
  geometry: Geometry
  collectionID: ID!
  protectedAreaID: ID
  locationID: ID
  licenseID: ID
}
"""
CreatePublicationInput is used for create Publication object.
Input was generated by ent.
"""
input CreatePublicationInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
  authorIDs: [ID!]
}
"""
CreatePublisherInput is used for create Publisher object.
Input was generated by ent.
"""
input CreatePublisherInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  bookIDs: [ID!]
}
"""
CreateRegionInput is used for create Region object.
Input was generated by ent.
"""
input CreateRegionInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locationIDs: [ID!]
}
"""
CreateSetInput is used for create Set object.
Input was generated by ent.
"""
input CreateSetInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
  monumentIDs: [ID!]
}
"""
CreateSettlementInput is used for create Settlement object.
Input was generated by ent.
"""
input CreateSettlementInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locationIDs: [ID!]
}
"""
CreateTechniqueInput is used for create Technique object.
Input was generated by ent.
"""
input CreateTechniqueInput {
  createdAt: Time
  createdBy: String
  updatedAt: Time
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifactIDs: [ID!]
}
type Culture implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
}
"""A connection to a list of items."""
type CultureConnection {
  """A list of edges."""
  edges: [CultureEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type CultureEdge {
  """The item at the end of the edge."""
  node: Culture
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Culture connections"""
input CultureOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Cultures."""
  field: CultureOrderField!
}
"""Properties by which Culture connections can be ordered."""
enum CultureOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
CultureWhereInput is used for filtering Culture objects.
Input was generated by ent.
"""
input CultureWhereInput {
  not: CultureWhereInput
  and: [CultureWhereInput!]
  or: [CultureWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type District implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locations: [Location!]
}
"""A connection to a list of items."""
type DistrictConnection {
  """A list of edges."""
  edges: [DistrictEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type DistrictEdge {
  """The item at the end of the edge."""
  node: District
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for District connections"""
input DistrictOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Districts."""
  field: DistrictOrderField!
}
"""Properties by which District connections can be ordered."""
enum DistrictOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
DistrictWhereInput is used for filtering District objects.
Input was generated by ent.
"""
input DistrictWhereInput {
  not: DistrictWhereInput
  and: [DistrictWhereInput!]
  or: [DistrictWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """locations edge predicates"""
  hasLocations: Boolean
  hasLocationsWith: [LocationWhereInput!]
}
type Holder implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  beginData: Time!
  endDate: Time
  artifacts: [Artifact!]
  books: [Book!]
  holderResponsibilities: [HolderResponsibility!]
  person: Person
  organization: Organization
}
"""A connection to a list of items."""
type HolderConnection {
  """A list of edges."""
  edges: [HolderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type HolderEdge {
  """The item at the end of the edge."""
  node: Holder
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Holder connections"""
input HolderOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Holders."""
  field: HolderOrderField!
}
"""Properties by which Holder connections can be ordered."""
enum HolderOrderField {
  CREATED_AT
  UPDATED_AT
}
type HolderResponsibility implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  holder: [Holder!]
}
"""A connection to a list of items."""
type HolderResponsibilityConnection {
  """A list of edges."""
  edges: [HolderResponsibilityEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type HolderResponsibilityEdge {
  """The item at the end of the edge."""
  node: HolderResponsibility
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for HolderResponsibility connections"""
input HolderResponsibilityOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order HolderResponsibilities."""
  field: HolderResponsibilityOrderField!
}
"""Properties by which HolderResponsibility connections can be ordered."""
enum HolderResponsibilityOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
HolderResponsibilityWhereInput is used for filtering HolderResponsibility objects.
Input was generated by ent.
"""
input HolderResponsibilityWhereInput {
  not: HolderResponsibilityWhereInput
  and: [HolderResponsibilityWhereInput!]
  or: [HolderResponsibilityWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """holder edge predicates"""
  hasHolder: Boolean
  hasHolderWith: [HolderWhereInput!]
}
"""
HolderWhereInput is used for filtering Holder objects.
Input was generated by ent.
"""
input HolderWhereInput {
  not: HolderWhereInput
  and: [HolderWhereInput!]
  or: [HolderWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """begin_data field predicates"""
  beginData: Time
  beginDataNEQ: Time
  beginDataIn: [Time!]
  beginDataNotIn: [Time!]
  beginDataGT: Time
  beginDataGTE: Time
  beginDataLT: Time
  beginDataLTE: Time
  """end_date field predicates"""
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
  """holder_responsibilities edge predicates"""
  hasHolderResponsibilities: Boolean
  hasHolderResponsibilitiesWith: [HolderResponsibilityWhereInput!]
  """person edge predicates"""
  hasPerson: Boolean
  hasPersonWith: [PersonWhereInput!]
  """organization edge predicates"""
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
}
type Keyword implements Node {
  id: ID!
}
"""
KeywordWhereInput is used for filtering Keyword objects.
Input was generated by ent.
"""
input KeywordWhereInput {
  not: KeywordWhereInput
  and: [KeywordWhereInput!]
  or: [KeywordWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}
type License implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
  books: [Book!]
  protectedAreaPictures: [ProtectedAreaPicture!]
}
"""A connection to a list of items."""
type LicenseConnection {
  """A list of edges."""
  edges: [LicenseEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type LicenseEdge {
  """The item at the end of the edge."""
  node: License
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for License connections"""
input LicenseOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Licenses."""
  field: LicenseOrderField!
}
"""Properties by which License connections can be ordered."""
enum LicenseOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
LicenseWhereInput is used for filtering License objects.
Input was generated by ent.
"""
input LicenseWhereInput {
  not: LicenseWhereInput
  and: [LicenseWhereInput!]
  or: [LicenseWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
  """protected_area_pictures edge predicates"""
  hasProtectedAreaPictures: Boolean
  hasProtectedAreaPicturesWith: [ProtectedAreaPictureWhereInput!]
}
type Location implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  geometry: Geometry
  artifacts: [Artifact!]
  books: [Book!]
  protectedAreaPictures: [ProtectedAreaPicture!]
  country: Country
  district: District
  settlement: Settlement
  region: Region
}
"""A connection to a list of items."""
type LocationConnection {
  """A list of edges."""
  edges: [LocationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type LocationEdge {
  """The item at the end of the edge."""
  node: Location
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Location connections"""
input LocationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Locations."""
  field: LocationOrderField!
}
"""Properties by which Location connections can be ordered."""
enum LocationOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
LocationWhereInput is used for filtering Location objects.
Input was generated by ent.
"""
input LocationWhereInput {
  not: LocationWhereInput
  and: [LocationWhereInput!]
  or: [LocationWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """geometry field predicates"""
  geometry: Geometry
  geometryNEQ: Geometry
  geometryIn: [Geometry!]
  geometryNotIn: [Geometry!]
  geometryGT: Geometry
  geometryGTE: Geometry
  geometryLT: Geometry
  geometryLTE: Geometry
  geometryIsNil: Boolean
  geometryNotNil: Boolean
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
  """protected_area_pictures edge predicates"""
  hasProtectedAreaPictures: Boolean
  hasProtectedAreaPicturesWith: [ProtectedAreaPictureWhereInput!]
  """country edge predicates"""
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
  """district edge predicates"""
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """settlement edge predicates"""
  hasSettlement: Boolean
  hasSettlementWith: [SettlementWhereInput!]
  """region edge predicates"""
  hasRegion: Boolean
  hasRegionWith: [RegionWhereInput!]
}
type Medium implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
}
"""A connection to a list of items."""
type MediumConnection {
  """A list of edges."""
  edges: [MediumEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MediumEdge {
  """The item at the end of the edge."""
  node: Medium
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Medium connections"""
input MediumOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Media."""
  field: MediumOrderField!
}
"""Properties by which Medium connections can be ordered."""
enum MediumOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
MediumWhereInput is used for filtering Medium objects.
Input was generated by ent.
"""
input MediumWhereInput {
  not: MediumWhereInput
  and: [MediumWhereInput!]
  or: [MediumWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
}
type Model implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
}
"""A connection to a list of items."""
type ModelConnection {
  """A list of edges."""
  edges: [ModelEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ModelEdge {
  """The item at the end of the edge."""
  node: Model
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Model connections"""
input ModelOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Models."""
  field: ModelOrderField!
}
"""Properties by which Model connections can be ordered."""
enum ModelOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ModelWhereInput is used for filtering Model objects.
Input was generated by ent.
"""
input ModelWhereInput {
  not: ModelWhereInput
  and: [ModelWhereInput!]
  or: [ModelWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
}
type Monument implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
  sets: [Set!]
}
"""A connection to a list of items."""
type MonumentConnection {
  """A list of edges."""
  edges: [MonumentEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type MonumentEdge {
  """The item at the end of the edge."""
  node: Monument
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Monument connections"""
input MonumentOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Monuments."""
  field: MonumentOrderField!
}
"""Properties by which Monument connections can be ordered."""
enum MonumentOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
MonumentWhereInput is used for filtering Monument objects.
Input was generated by ent.
"""
input MonumentWhereInput {
  not: MonumentWhereInput
  and: [MonumentWhereInput!]
  or: [MonumentWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """sets edge predicates"""
  hasSets: Boolean
  hasSetsWith: [SetWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/dkrasnovdev/siberiana-api/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
type Organization implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  address: String
  phoneNumbers: [String!]
  emails: [String!]
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  previousNames: [String!]
  isInAConsortium: Boolean
  consortiumDocumentURL: String
  people: [Person!]
  holder: Holder
  organizationType: OrganizationType
}
"""A connection to a list of items."""
type OrganizationConnection {
  """A list of edges."""
  edges: [OrganizationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type OrganizationEdge {
  """The item at the end of the edge."""
  node: Organization
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Organization connections"""
input OrganizationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Organizations."""
  field: OrganizationOrderField!
}
"""Properties by which Organization connections can be ordered."""
enum OrganizationOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
type OrganizationType implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  organizations: [Organization!]
}
"""A connection to a list of items."""
type OrganizationTypeConnection {
  """A list of edges."""
  edges: [OrganizationTypeEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type OrganizationTypeEdge {
  """The item at the end of the edge."""
  node: OrganizationType
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for OrganizationType connections"""
input OrganizationTypeOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrganizationTypes."""
  field: OrganizationTypeOrderField!
}
"""Properties by which OrganizationType connections can be ordered."""
enum OrganizationTypeOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
OrganizationTypeWhereInput is used for filtering OrganizationType objects.
Input was generated by ent.
"""
input OrganizationTypeWhereInput {
  not: OrganizationTypeWhereInput
  and: [OrganizationTypeWhereInput!]
  or: [OrganizationTypeWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """organizations edge predicates"""
  hasOrganizations: Boolean
  hasOrganizationsWith: [OrganizationWhereInput!]
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
  not: OrganizationWhereInput
  and: [OrganizationWhereInput!]
  or: [OrganizationWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """address field predicates"""
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """is_in_a_consortium field predicates"""
  isInAConsortium: Boolean
  isInAConsortiumNEQ: Boolean
  isInAConsortiumIsNil: Boolean
  isInAConsortiumNotNil: Boolean
  """consortium_document_url field predicates"""
  consortiumDocumentURL: String
  consortiumDocumentURLNEQ: String
  consortiumDocumentURLIn: [String!]
  consortiumDocumentURLNotIn: [String!]
  consortiumDocumentURLGT: String
  consortiumDocumentURLGTE: String
  consortiumDocumentURLLT: String
  consortiumDocumentURLLTE: String
  consortiumDocumentURLContains: String
  consortiumDocumentURLHasPrefix: String
  consortiumDocumentURLHasSuffix: String
  consortiumDocumentURLIsNil: Boolean
  consortiumDocumentURLNotNil: Boolean
  consortiumDocumentURLEqualFold: String
  consortiumDocumentURLContainsFold: String
  """people edge predicates"""
  hasPeople: Boolean
  hasPeopleWith: [PersonWhereInput!]
  """holder edge predicates"""
  hasHolder: Boolean
  hasHolderWith: [HolderWhereInput!]
  """organization_type edge predicates"""
  hasOrganizationType: Boolean
  hasOrganizationTypeWith: [OrganizationTypeWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Period implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
}
"""A connection to a list of items."""
type PeriodConnection {
  """A list of edges."""
  edges: [PeriodEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PeriodEdge {
  """The item at the end of the edge."""
  node: Period
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Period connections"""
input PeriodOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Periods."""
  field: PeriodOrderField!
}
"""Properties by which Period connections can be ordered."""
enum PeriodOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
PeriodWhereInput is used for filtering Period objects.
Input was generated by ent.
"""
input PeriodWhereInput {
  not: PeriodWhereInput
  and: [PeriodWhereInput!]
  or: [PeriodWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
}
type Person implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  address: String
  phoneNumbers: [String!]
  emails: [String!]
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  givenName: String
  familyName: String
  patronymicName: String
  beginData: Time
  endDate: Time
  gender: PersonGender!
  artifacts: [Artifact!]
  books: [Book!]
  projects: [Project!]
  publications: [Publication!]
  personRoles: [PersonRole!]
  holder: Holder
  affiliation: Organization
  collections: Collection
}
"""A connection to a list of items."""
type PersonConnection {
  """A list of edges."""
  edges: [PersonEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PersonEdge {
  """The item at the end of the edge."""
  node: Person
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""PersonGender is enum for the field gender"""
enum PersonGender @goModel(model: "github.com/dkrasnovdev/siberiana-api/ent/person.Gender") {
  female
  male
}
"""Ordering options for Person connections"""
input PersonOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Persons."""
  field: PersonOrderField!
}
"""Properties by which Person connections can be ordered."""
enum PersonOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
type PersonRole implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  person: [Person!]
}
"""A connection to a list of items."""
type PersonRoleConnection {
  """A list of edges."""
  edges: [PersonRoleEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PersonRoleEdge {
  """The item at the end of the edge."""
  node: PersonRole
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for PersonRole connections"""
input PersonRoleOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order PersonRoles."""
  field: PersonRoleOrderField!
}
"""Properties by which PersonRole connections can be ordered."""
enum PersonRoleOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
PersonRoleWhereInput is used for filtering PersonRole objects.
Input was generated by ent.
"""
input PersonRoleWhereInput {
  not: PersonRoleWhereInput
  and: [PersonRoleWhereInput!]
  or: [PersonRoleWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """person edge predicates"""
  hasPerson: Boolean
  hasPersonWith: [PersonWhereInput!]
}
"""
PersonWhereInput is used for filtering Person objects.
Input was generated by ent.
"""
input PersonWhereInput {
  not: PersonWhereInput
  and: [PersonWhereInput!]
  or: [PersonWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """address field predicates"""
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """given_name field predicates"""
  givenName: String
  givenNameNEQ: String
  givenNameIn: [String!]
  givenNameNotIn: [String!]
  givenNameGT: String
  givenNameGTE: String
  givenNameLT: String
  givenNameLTE: String
  givenNameContains: String
  givenNameHasPrefix: String
  givenNameHasSuffix: String
  givenNameIsNil: Boolean
  givenNameNotNil: Boolean
  givenNameEqualFold: String
  givenNameContainsFold: String
  """family_name field predicates"""
  familyName: String
  familyNameNEQ: String
  familyNameIn: [String!]
  familyNameNotIn: [String!]
  familyNameGT: String
  familyNameGTE: String
  familyNameLT: String
  familyNameLTE: String
  familyNameContains: String
  familyNameHasPrefix: String
  familyNameHasSuffix: String
  familyNameIsNil: Boolean
  familyNameNotNil: Boolean
  familyNameEqualFold: String
  familyNameContainsFold: String
  """patronymic_name field predicates"""
  patronymicName: String
  patronymicNameNEQ: String
  patronymicNameIn: [String!]
  patronymicNameNotIn: [String!]
  patronymicNameGT: String
  patronymicNameGTE: String
  patronymicNameLT: String
  patronymicNameLTE: String
  patronymicNameContains: String
  patronymicNameHasPrefix: String
  patronymicNameHasSuffix: String
  patronymicNameIsNil: Boolean
  patronymicNameNotNil: Boolean
  patronymicNameEqualFold: String
  patronymicNameContainsFold: String
  """begin_data field predicates"""
  beginData: Time
  beginDataNEQ: Time
  beginDataIn: [Time!]
  beginDataNotIn: [Time!]
  beginDataGT: Time
  beginDataGTE: Time
  beginDataLT: Time
  beginDataLTE: Time
  beginDataIsNil: Boolean
  beginDataNotNil: Boolean
  """end_date field predicates"""
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  """gender field predicates"""
  gender: PersonGender
  genderNEQ: PersonGender
  genderIn: [PersonGender!]
  genderNotIn: [PersonGender!]
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  """publications edge predicates"""
  hasPublications: Boolean
  hasPublicationsWith: [PublicationWhereInput!]
  """person_roles edge predicates"""
  hasPersonRoles: Boolean
  hasPersonRolesWith: [PersonRoleWhereInput!]
  """holder edge predicates"""
  hasHolder: Boolean
  hasHolderWith: [HolderWhereInput!]
  """affiliation edge predicates"""
  hasAffiliation: Boolean
  hasAffiliationWith: [OrganizationWhereInput!]
  """collections edge predicates"""
  hasCollections: Boolean
  hasCollectionsWith: [CollectionWhereInput!]
}
type Project implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  beginData: Time
  endDate: Time
  artifacts: [Artifact!]
  team: [Person!]
  projectType: ProjectType
}
"""A connection to a list of items."""
type ProjectConnection {
  """A list of edges."""
  edges: [ProjectEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ProjectEdge {
  """The item at the end of the edge."""
  node: Project
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Project connections"""
input ProjectOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Projects."""
  field: ProjectOrderField!
}
"""Properties by which Project connections can be ordered."""
enum ProjectOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
type ProjectType implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  projects: [Project!]
}
"""A connection to a list of items."""
type ProjectTypeConnection {
  """A list of edges."""
  edges: [ProjectTypeEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ProjectTypeEdge {
  """The item at the end of the edge."""
  node: ProjectType
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ProjectType connections"""
input ProjectTypeOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ProjectTypes."""
  field: ProjectTypeOrderField!
}
"""Properties by which ProjectType connections can be ordered."""
enum ProjectTypeOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ProjectTypeWhereInput is used for filtering ProjectType objects.
Input was generated by ent.
"""
input ProjectTypeWhereInput {
  not: ProjectTypeWhereInput
  and: [ProjectTypeWhereInput!]
  or: [ProjectTypeWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
}
"""
ProjectWhereInput is used for filtering Project objects.
Input was generated by ent.
"""
input ProjectWhereInput {
  not: ProjectWhereInput
  and: [ProjectWhereInput!]
  or: [ProjectWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """begin_data field predicates"""
  beginData: Time
  beginDataNEQ: Time
  beginDataIn: [Time!]
  beginDataNotIn: [Time!]
  beginDataGT: Time
  beginDataGTE: Time
  beginDataLT: Time
  beginDataLTE: Time
  beginDataIsNil: Boolean
  beginDataNotNil: Boolean
  """end_date field predicates"""
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """team edge predicates"""
  hasTeam: Boolean
  hasTeamWith: [PersonWhereInput!]
  """project_type edge predicates"""
  hasProjectType: Boolean
  hasProjectTypeWith: [ProjectTypeWhereInput!]
}
type ProtectedArea implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  area: String
  establishmentDate: Time
  protectedAreaPictures: [ProtectedAreaPicture!]
  protectedAreaCategory: ProtectedAreaCategory
}
type ProtectedAreaCategory implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  protectedAreas: [ProtectedArea!]
}
"""A connection to a list of items."""
type ProtectedAreaCategoryConnection {
  """A list of edges."""
  edges: [ProtectedAreaCategoryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ProtectedAreaCategoryEdge {
  """The item at the end of the edge."""
  node: ProtectedAreaCategory
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ProtectedAreaCategory connections"""
input ProtectedAreaCategoryOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ProtectedAreaCategories."""
  field: ProtectedAreaCategoryOrderField!
}
"""Properties by which ProtectedAreaCategory connections can be ordered."""
enum ProtectedAreaCategoryOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ProtectedAreaCategoryWhereInput is used for filtering ProtectedAreaCategory objects.
Input was generated by ent.
"""
input ProtectedAreaCategoryWhereInput {
  not: ProtectedAreaCategoryWhereInput
  and: [ProtectedAreaCategoryWhereInput!]
  or: [ProtectedAreaCategoryWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """protected_areas edge predicates"""
  hasProtectedAreas: Boolean
  hasProtectedAreasWith: [ProtectedAreaWhereInput!]
}
"""A connection to a list of items."""
type ProtectedAreaConnection {
  """A list of edges."""
  edges: [ProtectedAreaEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ProtectedAreaEdge {
  """The item at the end of the edge."""
  node: ProtectedArea
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ProtectedArea connections"""
input ProtectedAreaOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ProtectedAreas."""
  field: ProtectedAreaOrderField!
}
"""Properties by which ProtectedArea connections can be ordered."""
enum ProtectedAreaOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
type ProtectedAreaPicture implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  primaryImageURL: String
  additionalImagesUrls: [String!]
  shootingDate: Time
  geometry: Geometry
  collection: Collection!
  protectedArea: ProtectedArea
  location: Location
  license: License
}
"""A connection to a list of items."""
type ProtectedAreaPictureConnection {
  """A list of edges."""
  edges: [ProtectedAreaPictureEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type ProtectedAreaPictureEdge {
  """The item at the end of the edge."""
  node: ProtectedAreaPicture
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for ProtectedAreaPicture connections"""
input ProtectedAreaPictureOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order ProtectedAreaPictures."""
  field: ProtectedAreaPictureOrderField!
}
"""Properties by which ProtectedAreaPicture connections can be ordered."""
enum ProtectedAreaPictureOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
ProtectedAreaPictureWhereInput is used for filtering ProtectedAreaPicture objects.
Input was generated by ent.
"""
input ProtectedAreaPictureWhereInput {
  not: ProtectedAreaPictureWhereInput
  and: [ProtectedAreaPictureWhereInput!]
  or: [ProtectedAreaPictureWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """primary_image_url field predicates"""
  primaryImageURL: String
  primaryImageURLNEQ: String
  primaryImageURLIn: [String!]
  primaryImageURLNotIn: [String!]
  primaryImageURLGT: String
  primaryImageURLGTE: String
  primaryImageURLLT: String
  primaryImageURLLTE: String
  primaryImageURLContains: String
  primaryImageURLHasPrefix: String
  primaryImageURLHasSuffix: String
  primaryImageURLIsNil: Boolean
  primaryImageURLNotNil: Boolean
  primaryImageURLEqualFold: String
  primaryImageURLContainsFold: String
  """shooting_date field predicates"""
  shootingDate: Time
  shootingDateNEQ: Time
  shootingDateIn: [Time!]
  shootingDateNotIn: [Time!]
  shootingDateGT: Time
  shootingDateGTE: Time
  shootingDateLT: Time
  shootingDateLTE: Time
  shootingDateIsNil: Boolean
  shootingDateNotNil: Boolean
  """geometry field predicates"""
  geometry: Geometry
  geometryNEQ: Geometry
  geometryIn: [Geometry!]
  geometryNotIn: [Geometry!]
  geometryGT: Geometry
  geometryGTE: Geometry
  geometryLT: Geometry
  geometryLTE: Geometry
  geometryIsNil: Boolean
  geometryNotNil: Boolean
  """collection edge predicates"""
  hasCollection: Boolean
  hasCollectionWith: [CollectionWhereInput!]
  """protected_area edge predicates"""
  hasProtectedArea: Boolean
  hasProtectedAreaWith: [ProtectedAreaWhereInput!]
  """location edge predicates"""
  hasLocation: Boolean
  hasLocationWith: [LocationWhereInput!]
  """license edge predicates"""
  hasLicense: Boolean
  hasLicenseWith: [LicenseWhereInput!]
}
"""
ProtectedAreaWhereInput is used for filtering ProtectedArea objects.
Input was generated by ent.
"""
input ProtectedAreaWhereInput {
  not: ProtectedAreaWhereInput
  and: [ProtectedAreaWhereInput!]
  or: [ProtectedAreaWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """area field predicates"""
  area: String
  areaNEQ: String
  areaIn: [String!]
  areaNotIn: [String!]
  areaGT: String
  areaGTE: String
  areaLT: String
  areaLTE: String
  areaContains: String
  areaHasPrefix: String
  areaHasSuffix: String
  areaIsNil: Boolean
  areaNotNil: Boolean
  areaEqualFold: String
  areaContainsFold: String
  """establishment_date field predicates"""
  establishmentDate: Time
  establishmentDateNEQ: Time
  establishmentDateIn: [Time!]
  establishmentDateNotIn: [Time!]
  establishmentDateGT: Time
  establishmentDateGTE: Time
  establishmentDateLT: Time
  establishmentDateLTE: Time
  establishmentDateIsNil: Boolean
  establishmentDateNotNil: Boolean
  """protected_area_pictures edge predicates"""
  hasProtectedAreaPictures: Boolean
  hasProtectedAreaPicturesWith: [ProtectedAreaPictureWhereInput!]
  """protected_area_category edge predicates"""
  hasProtectedAreaCategory: Boolean
  hasProtectedAreaCategoryWith: [ProtectedAreaCategoryWhereInput!]
}
type Publication implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
  authors: [Person!]
}
"""A connection to a list of items."""
type PublicationConnection {
  """A list of edges."""
  edges: [PublicationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PublicationEdge {
  """The item at the end of the edge."""
  node: Publication
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Publication connections"""
input PublicationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Publications."""
  field: PublicationOrderField!
}
"""Properties by which Publication connections can be ordered."""
enum PublicationOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
PublicationWhereInput is used for filtering Publication objects.
Input was generated by ent.
"""
input PublicationWhereInput {
  not: PublicationWhereInput
  and: [PublicationWhereInput!]
  or: [PublicationWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """authors edge predicates"""
  hasAuthors: Boolean
  hasAuthorsWith: [PersonWhereInput!]
}
type Publisher implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  books: [Book!]
}
"""A connection to a list of items."""
type PublisherConnection {
  """A list of edges."""
  edges: [PublisherEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PublisherEdge {
  """The item at the end of the edge."""
  node: Publisher
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Publisher connections"""
input PublisherOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Publishers."""
  field: PublisherOrderField!
}
"""Properties by which Publisher connections can be ordered."""
enum PublisherOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
PublisherWhereInput is used for filtering Publisher objects.
Input was generated by ent.
"""
input PublisherWhereInput {
  not: PublisherWhereInput
  and: [PublisherWhereInput!]
  or: [PublisherWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """books edge predicates"""
  hasBooks: Boolean
  hasBooksWith: [BookWhereInput!]
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  arts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Arts returned from the connection."""
    orderBy: [ArtOrder!]

    """Filtering options for Arts returned from the connection."""
    where: ArtWhereInput
  ): ArtConnection!
  artGenres(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ArtGenres returned from the connection."""
    orderBy: [ArtGenreOrder!]

    """Filtering options for ArtGenres returned from the connection."""
    where: ArtGenreWhereInput
  ): ArtGenreConnection!
  artStyles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ArtStyles returned from the connection."""
    orderBy: [ArtStyleOrder!]

    """Filtering options for ArtStyles returned from the connection."""
    where: ArtStyleWhereInput
  ): ArtStyleConnection!
  artifacts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Artifacts returned from the connection."""
    orderBy: [ArtifactOrder!]

    """Filtering options for Artifacts returned from the connection."""
    where: ArtifactWhereInput
  ): ArtifactConnection!
  auditLogs(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for AuditLogs returned from the connection."""
    orderBy: [AuditLogOrder!]

    """Filtering options for AuditLogs returned from the connection."""
    where: AuditLogWhereInput
  ): AuditLogConnection!
  books(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Books returned from the connection."""
    orderBy: [BookOrder!]

    """Filtering options for Books returned from the connection."""
    where: BookWhereInput
  ): BookConnection!
  bookGenres(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for BookGenres returned from the connection."""
    orderBy: [BookGenreOrder!]

    """Filtering options for BookGenres returned from the connection."""
    where: BookGenreWhereInput
  ): BookGenreConnection!
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Categories returned from the connection."""
    orderBy: [CategoryOrder!]

    """Filtering options for Categories returned from the connection."""
    where: CategoryWhereInput
  ): CategoryConnection!
  collections(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Collections returned from the connection."""
    orderBy: [CollectionOrder!]

    """Filtering options for Collections returned from the connection."""
    where: CollectionWhereInput
  ): CollectionConnection!
  countries(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Countries returned from the connection."""
    orderBy: [CountryOrder!]

    """Filtering options for Countries returned from the connection."""
    where: CountryWhereInput
  ): CountryConnection!
  cultures(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Cultures returned from the connection."""
    orderBy: [CultureOrder!]

    """Filtering options for Cultures returned from the connection."""
    where: CultureWhereInput
  ): CultureConnection!
  districts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Districts returned from the connection."""
    orderBy: [DistrictOrder!]

    """Filtering options for Districts returned from the connection."""
    where: DistrictWhereInput
  ): DistrictConnection!
  holders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Holders returned from the connection."""
    orderBy: [HolderOrder!]

    """Filtering options for Holders returned from the connection."""
    where: HolderWhereInput
  ): HolderConnection!
  holderResponsibilities(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for HolderResponsibilities returned from the connection."""
    orderBy: [HolderResponsibilityOrder!]

    """Filtering options for HolderResponsibilities returned from the connection."""
    where: HolderResponsibilityWhereInput
  ): HolderResponsibilityConnection!
  licenses(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Licenses returned from the connection."""
    orderBy: [LicenseOrder!]

    """Filtering options for Licenses returned from the connection."""
    where: LicenseWhereInput
  ): LicenseConnection!
  locations(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Locations returned from the connection."""
    orderBy: [LocationOrder!]

    """Filtering options for Locations returned from the connection."""
    where: LocationWhereInput
  ): LocationConnection!
  media(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Media returned from the connection."""
    orderBy: [MediumOrder!]

    """Filtering options for Media returned from the connection."""
    where: MediumWhereInput
  ): MediumConnection!
  models(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Models returned from the connection."""
    orderBy: [ModelOrder!]

    """Filtering options for Models returned from the connection."""
    where: ModelWhereInput
  ): ModelConnection!
  monuments(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Monuments returned from the connection."""
    orderBy: [MonumentOrder!]

    """Filtering options for Monuments returned from the connection."""
    where: MonumentWhereInput
  ): MonumentConnection!
  organizations(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Organizations returned from the connection."""
    orderBy: OrganizationOrder

    """Filtering options for Organizations returned from the connection."""
    where: OrganizationWhereInput
  ): OrganizationConnection!
  organizationTypes(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for OrganizationTypes returned from the connection."""
    orderBy: [OrganizationTypeOrder!]

    """Filtering options for OrganizationTypes returned from the connection."""
    where: OrganizationTypeWhereInput
  ): OrganizationTypeConnection!
  periods(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Periods returned from the connection."""
    orderBy: [PeriodOrder!]

    """Filtering options for Periods returned from the connection."""
    where: PeriodWhereInput
  ): PeriodConnection!
  persons(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Persons returned from the connection."""
    orderBy: [PersonOrder!]

    """Filtering options for Persons returned from the connection."""
    where: PersonWhereInput
  ): PersonConnection!
  personRoles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for PersonRoles returned from the connection."""
    orderBy: [PersonRoleOrder!]

    """Filtering options for PersonRoles returned from the connection."""
    where: PersonRoleWhereInput
  ): PersonRoleConnection!
  projects(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Projects returned from the connection."""
    orderBy: [ProjectOrder!]

    """Filtering options for Projects returned from the connection."""
    where: ProjectWhereInput
  ): ProjectConnection!
  projectTypes(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ProjectTypes returned from the connection."""
    orderBy: [ProjectTypeOrder!]

    """Filtering options for ProjectTypes returned from the connection."""
    where: ProjectTypeWhereInput
  ): ProjectTypeConnection!
  protectedAreas(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ProtectedAreas returned from the connection."""
    orderBy: [ProtectedAreaOrder!]

    """Filtering options for ProtectedAreas returned from the connection."""
    where: ProtectedAreaWhereInput
  ): ProtectedAreaConnection!
  protectedAreaCategories(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ProtectedAreaCategories returned from the connection."""
    orderBy: [ProtectedAreaCategoryOrder!]

    """Filtering options for ProtectedAreaCategories returned from the connection."""
    where: ProtectedAreaCategoryWhereInput
  ): ProtectedAreaCategoryConnection!
  protectedAreaPictures(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for ProtectedAreaPictures returned from the connection."""
    orderBy: [ProtectedAreaPictureOrder!]

    """Filtering options for ProtectedAreaPictures returned from the connection."""
    where: ProtectedAreaPictureWhereInput
  ): ProtectedAreaPictureConnection!
  publications(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Publications returned from the connection."""
    orderBy: [PublicationOrder!]

    """Filtering options for Publications returned from the connection."""
    where: PublicationWhereInput
  ): PublicationConnection!
  publishers(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Publishers returned from the connection."""
    orderBy: [PublisherOrder!]

    """Filtering options for Publishers returned from the connection."""
    where: PublisherWhereInput
  ): PublisherConnection!
  regions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Regions returned from the connection."""
    orderBy: [RegionOrder!]

    """Filtering options for Regions returned from the connection."""
    where: RegionWhereInput
  ): RegionConnection!
  sets(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Sets returned from the connection."""
    orderBy: [SetOrder!]

    """Filtering options for Sets returned from the connection."""
    where: SetWhereInput
  ): SetConnection!
  settlements(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Settlements returned from the connection."""
    orderBy: [SettlementOrder!]

    """Filtering options for Settlements returned from the connection."""
    where: SettlementWhereInput
  ): SettlementConnection!
  techniques(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Skip _n_ elements from the list."""
    offset: Int

    """Ordering options for Techniques returned from the connection."""
    orderBy: [TechniqueOrder!]

    """Filtering options for Techniques returned from the connection."""
    where: TechniqueWhereInput
  ): TechniqueConnection!
}
type Region implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locations: [Location!]
}
"""A connection to a list of items."""
type RegionConnection {
  """A list of edges."""
  edges: [RegionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type RegionEdge {
  """The item at the end of the edge."""
  node: Region
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Region connections"""
input RegionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Regions."""
  field: RegionOrderField!
}
"""Properties by which Region connections can be ordered."""
enum RegionOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
RegionWhereInput is used for filtering Region objects.
Input was generated by ent.
"""
input RegionWhereInput {
  not: RegionWhereInput
  and: [RegionWhereInput!]
  or: [RegionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """locations edge predicates"""
  hasLocations: Boolean
  hasLocationsWith: [LocationWhereInput!]
}
type Set implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
  monuments: [Monument!]
}
"""A connection to a list of items."""
type SetConnection {
  """A list of edges."""
  edges: [SetEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type SetEdge {
  """The item at the end of the edge."""
  node: Set
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Set connections"""
input SetOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Sets."""
  field: SetOrderField!
}
"""Properties by which Set connections can be ordered."""
enum SetOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
SetWhereInput is used for filtering Set objects.
Input was generated by ent.
"""
input SetWhereInput {
  not: SetWhereInput
  and: [SetWhereInput!]
  or: [SetWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  """monuments edge predicates"""
  hasMonuments: Boolean
  hasMonumentsWith: [MonumentWhereInput!]
}
type Settlement implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  locations: [Location!]
}
"""A connection to a list of items."""
type SettlementConnection {
  """A list of edges."""
  edges: [SettlementEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type SettlementEdge {
  """The item at the end of the edge."""
  node: Settlement
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Settlement connections"""
input SettlementOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Settlements."""
  field: SettlementOrderField!
}
"""Properties by which Settlement connections can be ordered."""
enum SettlementOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
SettlementWhereInput is used for filtering Settlement objects.
Input was generated by ent.
"""
input SettlementWhereInput {
  not: SettlementWhereInput
  and: [SettlementWhereInput!]
  or: [SettlementWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """locations edge predicates"""
  hasLocations: Boolean
  hasLocationsWith: [LocationWhereInput!]
}
type Technique implements Node {
  id: ID!
  createdAt: Time!
  createdBy: String
  updatedAt: Time!
  updatedBy: String
  displayName: String
  abbreviation: String
  description: String
  externalLink: String
  artifacts: [Artifact!]
}
"""A connection to a list of items."""
type TechniqueConnection {
  """A list of edges."""
  edges: [TechniqueEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type TechniqueEdge {
  """The item at the end of the edge."""
  node: Technique
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Technique connections"""
input TechniqueOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Techniques."""
  field: TechniqueOrderField!
}
"""Properties by which Technique connections can be ordered."""
enum TechniqueOrderField {
  CREATED_AT
  UPDATED_AT
  DISPLAY_NAME
}
"""
TechniqueWhereInput is used for filtering Technique objects.
Input was generated by ent.
"""
input TechniqueWhereInput {
  not: TechniqueWhereInput
  and: [TechniqueWhereInput!]
  or: [TechniqueWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """created_by field predicates"""
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """updated_by field predicates"""
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """abbreviation field predicates"""
  abbreviation: String
  abbreviationNEQ: String
  abbreviationIn: [String!]
  abbreviationNotIn: [String!]
  abbreviationGT: String
  abbreviationGTE: String
  abbreviationLT: String
  abbreviationLTE: String
  abbreviationContains: String
  abbreviationHasPrefix: String
  abbreviationHasSuffix: String
  abbreviationIsNil: Boolean
  abbreviationNotNil: Boolean
  abbreviationEqualFold: String
  abbreviationContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """external_link field predicates"""
  externalLink: String
  externalLinkNEQ: String
  externalLinkIn: [String!]
  externalLinkNotIn: [String!]
  externalLinkGT: String
  externalLinkGTE: String
  externalLinkLT: String
  externalLinkLTE: String
  externalLinkContains: String
  externalLinkHasPrefix: String
  externalLinkHasSuffix: String
  externalLinkIsNil: Boolean
  externalLinkNotNil: Boolean
  externalLinkEqualFold: String
  externalLinkContainsFold: String
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
}
"""The builtin Time type"""
scalar Time
"""
UpdateArtGenreInput is used for update ArtGenre object.
Input was generated by ent.
"""
input UpdateArtGenreInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtIDs: [ID!]
  removeArtIDs: [ID!]
  clearArt: Boolean
}
"""
UpdateArtInput is used for update Art object.
Input was generated by ent.
"""
input UpdateArtInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  addArtGenreIDs: [ID!]
  removeArtGenreIDs: [ID!]
  clearArtGenre: Boolean
  addArtStyleIDs: [ID!]
  removeArtStyleIDs: [ID!]
  clearArtStyle: Boolean
}
"""
UpdateArtStyleInput is used for update ArtStyle object.
Input was generated by ent.
"""
input UpdateArtStyleInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtIDs: [ID!]
  removeArtIDs: [ID!]
  clearArt: Boolean
}
"""
UpdateArtifactInput is used for update Artifact object.
Input was generated by ent.
"""
input UpdateArtifactInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  deletedAt: Time
  clearDeletedAt: Boolean
  deletedBy: String
  clearDeletedBy: Boolean
  dating: String
  clearDating: Boolean
  dimensions: String
  clearDimensions: Boolean
  chemicalComposition: String
  clearChemicalComposition: Boolean
  number: String
  clearNumber: Boolean
  typology: String
  clearTypology: Boolean
  weight: String
  clearWeight: Boolean
  admissionDate: Time
  clearAdmissionDate: Boolean
  addAuthorIDs: [ID!]
  removeAuthorIDs: [ID!]
  clearAuthors: Boolean
  addMediumIDs: [ID!]
  removeMediumIDs: [ID!]
  clearMediums: Boolean
  addTechniqueIDs: [ID!]
  removeTechniqueIDs: [ID!]
  clearTechniques: Boolean
  periodID: ID
  clearPeriod: Boolean
  addProjectIDs: [ID!]
  removeProjectIDs: [ID!]
  clearProjects: Boolean
  addPublicationIDs: [ID!]
  removePublicationIDs: [ID!]
  clearPublications: Boolean
  addHolderIDs: [ID!]
  removeHolderIDs: [ID!]
  clearHolders: Boolean
  culturalAffiliationID: ID
  clearCulturalAffiliation: Boolean
  monumentID: ID
  clearMonument: Boolean
  modelID: ID
  clearModel: Boolean
  setID: ID
  clearSet: Boolean
  locationID: ID
  clearLocation: Boolean
  collectionID: ID
  licenseID: ID
  clearLicense: Boolean
}
"""
UpdateBookGenreInput is used for update BookGenre object.
Input was generated by ent.
"""
input UpdateBookGenreInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
}
"""
UpdateBookInput is used for update Book object.
Input was generated by ent.
"""
input UpdateBookInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  files: [String!]
  appendFiles: [String!]
  clearFiles: Boolean
  year: Int
  clearYear: Boolean
  addAuthorIDs: [ID!]
  removeAuthorIDs: [ID!]
  clearAuthors: Boolean
  addBookGenreIDs: [ID!]
  removeBookGenreIDs: [ID!]
  clearBookGenres: Boolean
  collectionID: ID
  addHolderIDs: [ID!]
  removeHolderIDs: [ID!]
  clearHolders: Boolean
  publisherID: ID
  clearPublisher: Boolean
  licenseID: ID
  clearLicense: Boolean
  locationID: ID
  clearLocation: Boolean
}
"""
UpdateCategoryInput is used for update Category object.
Input was generated by ent.
"""
input UpdateCategoryInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  slug: String
  addCollectionIDs: [ID!]
  removeCollectionIDs: [ID!]
  clearCollections: Boolean
}
"""
UpdateCollectionInput is used for update Collection object.
Input was generated by ent.
"""
input UpdateCollectionInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  slug: String
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
  addPersonIDs: [ID!]
  removePersonIDs: [ID!]
  clearPeople: Boolean
  addProtectedAreaPictureIDs: [ID!]
  removeProtectedAreaPictureIDs: [ID!]
  clearProtectedAreaPictures: Boolean
  categoryID: ID
}
"""
UpdateCountryInput is used for update Country object.
Input was generated by ent.
"""
input UpdateCountryInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addLocationIDs: [ID!]
  removeLocationIDs: [ID!]
  clearLocations: Boolean
}
"""
UpdateCultureInput is used for update Culture object.
Input was generated by ent.
"""
input UpdateCultureInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
}
"""
UpdateDistrictInput is used for update District object.
Input was generated by ent.
"""
input UpdateDistrictInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addLocationIDs: [ID!]
  removeLocationIDs: [ID!]
  clearLocations: Boolean
}
"""
UpdateHolderInput is used for update Holder object.
Input was generated by ent.
"""
input UpdateHolderInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  beginData: Time
  endDate: Time
  clearEndDate: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
  addHolderResponsibilityIDs: [ID!]
  removeHolderResponsibilityIDs: [ID!]
  clearHolderResponsibilities: Boolean
  personID: ID
  clearPerson: Boolean
  organizationID: ID
  clearOrganization: Boolean
}
"""
UpdateHolderResponsibilityInput is used for update HolderResponsibility object.
Input was generated by ent.
"""
input UpdateHolderResponsibilityInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addHolderIDs: [ID!]
  removeHolderIDs: [ID!]
  clearHolder: Boolean
}
"""
UpdateLicenseInput is used for update License object.
Input was generated by ent.
"""
input UpdateLicenseInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
  addProtectedAreaPictureIDs: [ID!]
  removeProtectedAreaPictureIDs: [ID!]
  clearProtectedAreaPictures: Boolean
}
"""
UpdateLocationInput is used for update Location object.
Input was generated by ent.
"""
input UpdateLocationInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  geometry: Geometry
  clearGeometry: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
  addProtectedAreaPictureIDs: [ID!]
  removeProtectedAreaPictureIDs: [ID!]
  clearProtectedAreaPictures: Boolean
  countryID: ID
  clearCountry: Boolean
  districtID: ID
  clearDistrict: Boolean
  settlementID: ID
  clearSettlement: Boolean
  regionID: ID
  clearRegion: Boolean
}
"""
UpdateMediumInput is used for update Medium object.
Input was generated by ent.
"""
input UpdateMediumInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
}
"""
UpdateModelInput is used for update Model object.
Input was generated by ent.
"""
input UpdateModelInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
}
"""
UpdateMonumentInput is used for update Monument object.
Input was generated by ent.
"""
input UpdateMonumentInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addSetIDs: [ID!]
  removeSetIDs: [ID!]
  clearSets: Boolean
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  address: String
  clearAddress: Boolean
  phoneNumbers: [String!]
  appendPhoneNumbers: [String!]
  clearPhoneNumbers: Boolean
  emails: [String!]
  appendEmails: [String!]
  clearEmails: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  previousNames: [String!]
  appendPreviousNames: [String!]
  clearPreviousNames: Boolean
  isInAConsortium: Boolean
  clearIsInAConsortium: Boolean
  consortiumDocumentURL: String
  clearConsortiumDocumentURL: Boolean
  addPersonIDs: [ID!]
  removePersonIDs: [ID!]
  clearPeople: Boolean
  holderID: ID
  clearHolder: Boolean
  organizationTypeID: ID
  clearOrganizationType: Boolean
}
"""
UpdateOrganizationTypeInput is used for update OrganizationType object.
Input was generated by ent.
"""
input UpdateOrganizationTypeInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganizations: Boolean
}
"""
UpdatePeriodInput is used for update Period object.
Input was generated by ent.
"""
input UpdatePeriodInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
}
"""
UpdatePersonInput is used for update Person object.
Input was generated by ent.
"""
input UpdatePersonInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  address: String
  clearAddress: Boolean
  phoneNumbers: [String!]
  appendPhoneNumbers: [String!]
  clearPhoneNumbers: Boolean
  emails: [String!]
  appendEmails: [String!]
  clearEmails: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  givenName: String
  clearGivenName: Boolean
  familyName: String
  clearFamilyName: Boolean
  patronymicName: String
  clearPatronymicName: Boolean
  beginData: Time
  clearBeginData: Boolean
  endDate: Time
  clearEndDate: Boolean
  gender: PersonGender
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
  addProjectIDs: [ID!]
  removeProjectIDs: [ID!]
  clearProjects: Boolean
  addPublicationIDs: [ID!]
  removePublicationIDs: [ID!]
  clearPublications: Boolean
  addPersonRoleIDs: [ID!]
  removePersonRoleIDs: [ID!]
  clearPersonRoles: Boolean
  holderID: ID
  clearHolder: Boolean
  affiliationID: ID
  clearAffiliation: Boolean
  collectionsID: ID
  clearCollections: Boolean
}
"""
UpdatePersonRoleInput is used for update PersonRole object.
Input was generated by ent.
"""
input UpdatePersonRoleInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addPersonIDs: [ID!]
  removePersonIDs: [ID!]
  clearPerson: Boolean
}
"""
UpdateProjectInput is used for update Project object.
Input was generated by ent.
"""
input UpdateProjectInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  beginData: Time
  clearBeginData: Boolean
  endDate: Time
  clearEndDate: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addTeamIDs: [ID!]
  removeTeamIDs: [ID!]
  clearTeam: Boolean
  projectTypeID: ID
  clearProjectType: Boolean
}
"""
UpdateProjectTypeInput is used for update ProjectType object.
Input was generated by ent.
"""
input UpdateProjectTypeInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addProjectIDs: [ID!]
  removeProjectIDs: [ID!]
  clearProjects: Boolean
}
"""
UpdateProtectedAreaCategoryInput is used for update ProtectedAreaCategory object.
Input was generated by ent.
"""
input UpdateProtectedAreaCategoryInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addProtectedAreaIDs: [ID!]
  removeProtectedAreaIDs: [ID!]
  clearProtectedAreas: Boolean
}
"""
UpdateProtectedAreaInput is used for update ProtectedArea object.
Input was generated by ent.
"""
input UpdateProtectedAreaInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  area: String
  clearArea: Boolean
  establishmentDate: Time
  clearEstablishmentDate: Boolean
  addProtectedAreaPictureIDs: [ID!]
  removeProtectedAreaPictureIDs: [ID!]
  clearProtectedAreaPictures: Boolean
  protectedAreaCategoryID: ID
  clearProtectedAreaCategory: Boolean
}
"""
UpdateProtectedAreaPictureInput is used for update ProtectedAreaPicture object.
Input was generated by ent.
"""
input UpdateProtectedAreaPictureInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  primaryImageURL: String
  clearPrimaryImageURL: Boolean
  additionalImagesUrls: [String!]
  appendAdditionalImagesUrls: [String!]
  clearAdditionalImagesUrls: Boolean
  shootingDate: Time
  clearShootingDate: Boolean
  geometry: Geometry
  clearGeometry: Boolean
  collectionID: ID
  protectedAreaID: ID
  clearProtectedArea: Boolean
  locationID: ID
  clearLocation: Boolean
  licenseID: ID
  clearLicense: Boolean
}
"""
UpdatePublicationInput is used for update Publication object.
Input was generated by ent.
"""
input UpdatePublicationInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addAuthorIDs: [ID!]
  removeAuthorIDs: [ID!]
  clearAuthors: Boolean
}
"""
UpdatePublisherInput is used for update Publisher object.
Input was generated by ent.
"""
input UpdatePublisherInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
}
"""
UpdateRegionInput is used for update Region object.
Input was generated by ent.
"""
input UpdateRegionInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addLocationIDs: [ID!]
  removeLocationIDs: [ID!]
  clearLocations: Boolean
}
"""
UpdateSetInput is used for update Set object.
Input was generated by ent.
"""
input UpdateSetInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
  addMonumentIDs: [ID!]
  removeMonumentIDs: [ID!]
  clearMonuments: Boolean
}
"""
UpdateSettlementInput is used for update Settlement object.
Input was generated by ent.
"""
input UpdateSettlementInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addLocationIDs: [ID!]
  removeLocationIDs: [ID!]
  clearLocations: Boolean
}
"""
UpdateTechniqueInput is used for update Technique object.
Input was generated by ent.
"""
input UpdateTechniqueInput {
  createdBy: String
  clearCreatedBy: Boolean
  updatedAt: Time
  updatedBy: String
  clearUpdatedBy: Boolean
  displayName: String
  clearDisplayName: Boolean
  abbreviation: String
  clearAbbreviation: Boolean
  description: String
  clearDescription: Boolean
  externalLink: String
  clearExternalLink: Boolean
  addArtifactIDs: [ID!]
  removeArtifactIDs: [ID!]
  clearArtifacts: Boolean
}
