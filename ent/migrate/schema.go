// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArtsColumns holds the columns for the "arts" table.
	ArtsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "dating", Type: field.TypeString, Nullable: true},
		{Name: "dating_start", Type: field.TypeInt, Nullable: true},
		{Name: "dating_end", Type: field.TypeInt, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "height", Type: field.TypeFloat64, Nullable: true},
		{Name: "width", Type: field.TypeFloat64, Nullable: true},
		{Name: "length", Type: field.TypeFloat64, Nullable: true},
		{Name: "depth", Type: field.TypeFloat64, Nullable: true},
		{Name: "diameter", Type: field.TypeFloat64, Nullable: true},
		{Name: "weight", Type: field.TypeString, Nullable: true},
		{Name: "dimensions", Type: field.TypeString, Nullable: true},
		{Name: "number", Type: field.TypeString, Nullable: true},
		{Name: "collection_art", Type: field.TypeInt},
		{Name: "country_art", Type: field.TypeInt, Nullable: true},
		{Name: "district_art", Type: field.TypeInt, Nullable: true},
		{Name: "person_art", Type: field.TypeInt, Nullable: true},
		{Name: "region_art", Type: field.TypeInt, Nullable: true},
		{Name: "settlement_art", Type: field.TypeInt, Nullable: true},
	}
	// ArtsTable holds the schema information for the "arts" table.
	ArtsTable = &schema.Table{
		Name:       "arts",
		Columns:    ArtsColumns,
		PrimaryKey: []*schema.Column{ArtsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "arts_collections_art",
				Columns:    []*schema.Column{ArtsColumns[23]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "arts_countries_art",
				Columns:    []*schema.Column{ArtsColumns[24]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "arts_districts_art",
				Columns:    []*schema.Column{ArtsColumns[25]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "arts_persons_art",
				Columns:    []*schema.Column{ArtsColumns[26]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "arts_regions_art",
				Columns:    []*schema.Column{ArtsColumns[27]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "arts_settlements_art",
				Columns:    []*schema.Column{ArtsColumns[28]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ArtGenresColumns holds the columns for the "art_genres" table.
	ArtGenresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// ArtGenresTable holds the schema information for the "art_genres" table.
	ArtGenresTable = &schema.Table{
		Name:       "art_genres",
		Columns:    ArtGenresColumns,
		PrimaryKey: []*schema.Column{ArtGenresColumns[0]},
	}
	// ArtStylesColumns holds the columns for the "art_styles" table.
	ArtStylesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// ArtStylesTable holds the schema information for the "art_styles" table.
	ArtStylesTable = &schema.Table{
		Name:       "art_styles",
		Columns:    ArtStylesColumns,
		PrimaryKey: []*schema.Column{ArtStylesColumns[0]},
	}
	// ArtifactsColumns holds the columns for the "artifacts" table.
	ArtifactsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "dating", Type: field.TypeString, Nullable: true},
		{Name: "dating_start", Type: field.TypeInt, Nullable: true},
		{Name: "dating_end", Type: field.TypeInt, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "height", Type: field.TypeFloat64, Nullable: true},
		{Name: "width", Type: field.TypeFloat64, Nullable: true},
		{Name: "length", Type: field.TypeFloat64, Nullable: true},
		{Name: "depth", Type: field.TypeFloat64, Nullable: true},
		{Name: "diameter", Type: field.TypeFloat64, Nullable: true},
		{Name: "weight", Type: field.TypeString, Nullable: true},
		{Name: "dimensions", Type: field.TypeString, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "chemical_composition", Type: field.TypeString, Nullable: true},
		{Name: "kp_number", Type: field.TypeString, Nullable: true},
		{Name: "goskatalog_number", Type: field.TypeString, Nullable: true},
		{Name: "inventory_number", Type: field.TypeString, Nullable: true},
		{Name: "typology", Type: field.TypeString, Nullable: true},
		{Name: "admission_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "collection_artifacts", Type: field.TypeInt},
		{Name: "country_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "culture_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "district_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "ethnos_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "license_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "location_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "model_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "monument_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "organization_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "person_donated_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "region_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "set_artifacts", Type: field.TypeInt, Nullable: true},
		{Name: "settlement_artifacts", Type: field.TypeInt, Nullable: true},
	}
	// ArtifactsTable holds the schema information for the "artifacts" table.
	ArtifactsTable = &schema.Table{
		Name:       "artifacts",
		Columns:    ArtifactsColumns,
		PrimaryKey: []*schema.Column{ArtifactsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "artifacts_collections_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[30]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "artifacts_countries_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[31]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_cultures_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[32]},
				RefColumns: []*schema.Column{CulturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_districts_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[33]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_ethnos_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[34]},
				RefColumns: []*schema.Column{EthnosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_licenses_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[35]},
				RefColumns: []*schema.Column{LicensesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_locations_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[36]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_models_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[37]},
				RefColumns: []*schema.Column{ModelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_monuments_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[38]},
				RefColumns: []*schema.Column{MonumentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_organizations_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[39]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_persons_donated_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[40]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_regions_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[41]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_sets_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[42]},
				RefColumns: []*schema.Column{SetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "artifacts_settlements_artifacts",
				Columns:    []*schema.Column{ArtifactsColumns[43]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AuditLogsColumns holds the columns for the "audit_logs" table.
	AuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "table", Type: field.TypeString, Nullable: true},
		{Name: "ref_id", Type: field.TypeInt, Nullable: true},
		{Name: "operation", Type: field.TypeString, Nullable: true},
		{Name: "changes", Type: field.TypeJSON, Nullable: true},
		{Name: "added_edges", Type: field.TypeJSON, Nullable: true},
		{Name: "removed_edges", Type: field.TypeJSON, Nullable: true},
		{Name: "cleared_edges", Type: field.TypeJSON, Nullable: true},
		{Name: "blame", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AuditLogsTable holds the schema information for the "audit_logs" table.
	AuditLogsTable = &schema.Table{
		Name:       "audit_logs",
		Columns:    AuditLogsColumns,
		PrimaryKey: []*schema.Column{AuditLogsColumns[0]},
	}
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "files", Type: field.TypeJSON, Nullable: true},
		{Name: "year", Type: field.TypeInt, Nullable: true},
		{Name: "collection_books", Type: field.TypeInt},
		{Name: "country_books", Type: field.TypeInt, Nullable: true},
		{Name: "district_books", Type: field.TypeInt, Nullable: true},
		{Name: "license_books", Type: field.TypeInt, Nullable: true},
		{Name: "location_books", Type: field.TypeInt, Nullable: true},
		{Name: "organization_books", Type: field.TypeInt, Nullable: true},
		{Name: "periodical_books", Type: field.TypeInt, Nullable: true},
		{Name: "publisher_books", Type: field.TypeInt, Nullable: true},
		{Name: "region_books", Type: field.TypeInt, Nullable: true},
		{Name: "settlement_books", Type: field.TypeInt, Nullable: true},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "books_collections_books",
				Columns:    []*schema.Column{BooksColumns[14]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "books_countries_books",
				Columns:    []*schema.Column{BooksColumns[15]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_districts_books",
				Columns:    []*schema.Column{BooksColumns[16]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_licenses_books",
				Columns:    []*schema.Column{BooksColumns[17]},
				RefColumns: []*schema.Column{LicensesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_locations_books",
				Columns:    []*schema.Column{BooksColumns[18]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_organizations_books",
				Columns:    []*schema.Column{BooksColumns[19]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_periodicals_books",
				Columns:    []*schema.Column{BooksColumns[20]},
				RefColumns: []*schema.Column{PeriodicalsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_publishers_books",
				Columns:    []*schema.Column{BooksColumns[21]},
				RefColumns: []*schema.Column{PublishersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_regions_books",
				Columns:    []*schema.Column{BooksColumns[22]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "books_settlements_books",
				Columns:    []*schema.Column{BooksColumns[23]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BookGenresColumns holds the columns for the "book_genres" table.
	BookGenresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// BookGenresTable holds the schema information for the "book_genres" table.
	BookGenresTable = &schema.Table{
		Name:       "book_genres",
		Columns:    BookGenresColumns,
		PrimaryKey: []*schema.Column{BookGenresColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// CollectionsColumns holds the columns for the "collections" table.
	CollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeEnum, Nullable: true, Enums: []string{"art", "artifacts", "books", "dendrochronology", "protected_area_pictures", "petroglyphs"}},
		{Name: "category_collections", Type: field.TypeInt},
	}
	// CollectionsTable holds the schema information for the "collections" table.
	CollectionsTable = &schema.Table{
		Name:       "collections",
		Columns:    CollectionsColumns,
		PrimaryKey: []*schema.Column{CollectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "collections_categories_collections",
				Columns:    []*schema.Column{CollectionsColumns[15]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// CulturesColumns holds the columns for the "cultures" table.
	CulturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// CulturesTable holds the schema information for the "cultures" table.
	CulturesTable = &schema.Table{
		Name:       "cultures",
		Columns:    CulturesColumns,
		PrimaryKey: []*schema.Column{CulturesColumns[0]},
	}
	// DendrochronologicalAnalysesColumns holds the columns for the "dendrochronological_analyses" table.
	DendrochronologicalAnalysesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "start_year", Type: field.TypeInt},
		{Name: "end_year", Type: field.TypeInt},
		{Name: "number_of_rings", Type: field.TypeInt},
		{Name: "coefficient_correlation", Type: field.TypeFloat64},
		{Name: "standard_deviation", Type: field.TypeFloat64},
		{Name: "sensitivity", Type: field.TypeFloat64},
		{Name: "sampling_location", Type: field.TypeString},
		{Name: "dendrochronological_analysis_dendrochronology", Type: field.TypeInt},
	}
	// DendrochronologicalAnalysesTable holds the schema information for the "dendrochronological_analyses" table.
	DendrochronologicalAnalysesTable = &schema.Table{
		Name:       "dendrochronological_analyses",
		Columns:    DendrochronologicalAnalysesColumns,
		PrimaryKey: []*schema.Column{DendrochronologicalAnalysesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dendrochronological_analyses_dendrochronologies_dendrochronology",
				Columns:    []*schema.Column{DendrochronologicalAnalysesColumns[13]},
				RefColumns: []*schema.Column{DendrochronologiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DendrochronologiesColumns holds the columns for the "dendrochronologies" table.
	DendrochronologiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "dating", Type: field.TypeString, Nullable: true},
		{Name: "dating_start", Type: field.TypeInt, Nullable: true},
		{Name: "dating_end", Type: field.TypeInt, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "analysis_data", Type: field.TypeString, Nullable: true},
		{Name: "analysis_url", Type: field.TypeString, Nullable: true},
		{Name: "data_url", Type: field.TypeString, Nullable: true},
		{Name: "chart_url", Type: field.TypeString, Nullable: true},
		{Name: "collection_dendrochronology", Type: field.TypeInt, Nullable: true},
		{Name: "personal_collection_dendrochronology", Type: field.TypeInt, Nullable: true},
	}
	// DendrochronologiesTable holds the schema information for the "dendrochronologies" table.
	DendrochronologiesTable = &schema.Table{
		Name:       "dendrochronologies",
		Columns:    DendrochronologiesColumns,
		PrimaryKey: []*schema.Column{DendrochronologiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dendrochronologies_collections_dendrochronology",
				Columns:    []*schema.Column{DendrochronologiesColumns[21]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "dendrochronologies_personal_collections_dendrochronology",
				Columns:    []*schema.Column{DendrochronologiesColumns[22]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DistrictsColumns holds the columns for the "districts" table.
	DistrictsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "region_districts", Type: field.TypeInt, Nullable: true},
	}
	// DistrictsTable holds the schema information for the "districts" table.
	DistrictsTable = &schema.Table{
		Name:       "districts",
		Columns:    DistrictsColumns,
		PrimaryKey: []*schema.Column{DistrictsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "districts_regions_districts",
				Columns:    []*schema.Column{DistrictsColumns[9]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EthnosColumns holds the columns for the "ethnos" table.
	EthnosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// EthnosTable holds the schema information for the "ethnos" table.
	EthnosTable = &schema.Table{
		Name:       "ethnos",
		Columns:    EthnosColumns,
		PrimaryKey: []*schema.Column{EthnosColumns[0]},
	}
	// FavouritesColumns holds the columns for the "favourites" table.
	FavouritesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
	}
	// FavouritesTable holds the schema information for the "favourites" table.
	FavouritesTable = &schema.Table{
		Name:       "favourites",
		Columns:    FavouritesColumns,
		PrimaryKey: []*schema.Column{FavouritesColumns[0]},
	}
	// InterviewsColumns holds the columns for the "interviews" table.
	InterviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
	}
	// InterviewsTable holds the schema information for the "interviews" table.
	InterviewsTable = &schema.Table{
		Name:       "interviews",
		Columns:    InterviewsColumns,
		PrimaryKey: []*schema.Column{InterviewsColumns[0]},
	}
	// KeywordsColumns holds the columns for the "keywords" table.
	KeywordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// KeywordsTable holds the schema information for the "keywords" table.
	KeywordsTable = &schema.Table{
		Name:       "keywords",
		Columns:    KeywordsColumns,
		PrimaryKey: []*schema.Column{KeywordsColumns[0]},
	}
	// LicensesColumns holds the columns for the "licenses" table.
	LicensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// LicensesTable holds the schema information for the "licenses" table.
	LicensesTable = &schema.Table{
		Name:       "licenses",
		Columns:    LicensesColumns,
		PrimaryKey: []*schema.Column{LicensesColumns[0]},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "geometry", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "location_country", Type: field.TypeInt, Nullable: true},
		{Name: "location_district", Type: field.TypeInt, Nullable: true},
		{Name: "location_settlement", Type: field.TypeInt, Nullable: true},
		{Name: "location_region", Type: field.TypeInt, Nullable: true},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "locations_countries_country",
				Columns:    []*schema.Column{LocationsColumns[10]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "locations_districts_district",
				Columns:    []*schema.Column{LocationsColumns[11]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "locations_settlements_settlement",
				Columns:    []*schema.Column{LocationsColumns[12]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "locations_regions_region",
				Columns:    []*schema.Column{LocationsColumns[13]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MediaColumns holds the columns for the "media" table.
	MediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// MediaTable holds the schema information for the "media" table.
	MediaTable = &schema.Table{
		Name:       "media",
		Columns:    MediaColumns,
		PrimaryKey: []*schema.Column{MediaColumns[0]},
	}
	// ModelsColumns holds the columns for the "models" table.
	ModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "file_url", Type: field.TypeString},
	}
	// ModelsTable holds the schema information for the "models" table.
	ModelsTable = &schema.Table{
		Name:       "models",
		Columns:    ModelsColumns,
		PrimaryKey: []*schema.Column{ModelsColumns[0]},
	}
	// MonumentsColumns holds the columns for the "monuments" table.
	MonumentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// MonumentsTable holds the schema information for the "monuments" table.
	MonumentsTable = &schema.Table{
		Name:       "monuments",
		Columns:    MonumentsColumns,
		PrimaryKey: []*schema.Column{MonumentsColumns[0]},
	}
	// MoundsColumns holds the columns for the "mounds" table.
	MoundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "number", Type: field.TypeString, Nullable: true},
	}
	// MoundsTable holds the schema information for the "mounds" table.
	MoundsTable = &schema.Table{
		Name:       "mounds",
		Columns:    MoundsColumns,
		PrimaryKey: []*schema.Column{MoundsColumns[0]},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "phone_numbers", Type: field.TypeJSON, Nullable: true},
		{Name: "emails", Type: field.TypeJSON, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "previous_names", Type: field.TypeJSON, Nullable: true},
		{Name: "is_in_a_consortium", Type: field.TypeBool, Nullable: true},
		{Name: "consortium_document_url", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Nullable: true, Enums: []string{"museum", "library", "archive", "other"}},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
	}
	// PeriodicalsColumns holds the columns for the "periodicals" table.
	PeriodicalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// PeriodicalsTable holds the schema information for the "periodicals" table.
	PeriodicalsTable = &schema.Table{
		Name:       "periodicals",
		Columns:    PeriodicalsColumns,
		PrimaryKey: []*schema.Column{PeriodicalsColumns[0]},
	}
	// PersonsColumns holds the columns for the "persons" table.
	PersonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "phone_numbers", Type: field.TypeJSON, Nullable: true},
		{Name: "emails", Type: field.TypeJSON, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "given_name", Type: field.TypeString, Nullable: true},
		{Name: "family_name", Type: field.TypeString, Nullable: true},
		{Name: "patronymic_name", Type: field.TypeString, Nullable: true},
		{Name: "begin_data", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Enums: []string{"female", "male"}},
		{Name: "occupation", Type: field.TypeString, Nullable: true},
		{Name: "organization_people", Type: field.TypeInt, Nullable: true},
	}
	// PersonsTable holds the schema information for the "persons" table.
	PersonsTable = &schema.Table{
		Name:       "persons",
		Columns:    PersonsColumns,
		PrimaryKey: []*schema.Column{PersonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "persons_organizations_people",
				Columns:    []*schema.Column{PersonsColumns[21]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PersonalCollectionsColumns holds the columns for the "personal_collections" table.
	PersonalCollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "is_public", Type: field.TypeBool, Default: false},
	}
	// PersonalCollectionsTable holds the schema information for the "personal_collections" table.
	PersonalCollectionsTable = &schema.Table{
		Name:       "personal_collections",
		Columns:    PersonalCollectionsColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionsColumns[0]},
	}
	// PetroglyphsColumns holds the columns for the "petroglyphs" table.
	PetroglyphsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "dating", Type: field.TypeString, Nullable: true},
		{Name: "dating_start", Type: field.TypeInt, Nullable: true},
		{Name: "dating_end", Type: field.TypeInt, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "height", Type: field.TypeFloat64, Nullable: true},
		{Name: "width", Type: field.TypeFloat64, Nullable: true},
		{Name: "length", Type: field.TypeFloat64, Nullable: true},
		{Name: "depth", Type: field.TypeFloat64, Nullable: true},
		{Name: "diameter", Type: field.TypeFloat64, Nullable: true},
		{Name: "weight", Type: field.TypeString, Nullable: true},
		{Name: "dimensions", Type: field.TypeString, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "number", Type: field.TypeString, Nullable: true},
		{Name: "orientation", Type: field.TypeString, Nullable: true},
		{Name: "position", Type: field.TypeString, Nullable: true},
		{Name: "geometric_shape", Type: field.TypeString, Nullable: true},
		{Name: "plane_preservation", Type: field.TypeString, Nullable: true},
		{Name: "photo_code", Type: field.TypeString, Nullable: true},
		{Name: "accounting_documentation_information", Type: field.TypeString, Nullable: true},
		{Name: "accounting_documentation_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "geometry", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "collection_petroglyphs", Type: field.TypeInt},
		{Name: "culture_petroglyphs", Type: field.TypeInt, Nullable: true},
		{Name: "location_petroglyphs_accounting_documentation", Type: field.TypeInt, Nullable: true},
		{Name: "model_petroglyphs", Type: field.TypeInt, Nullable: true},
		{Name: "mound_petroglyphs", Type: field.TypeInt, Nullable: true},
		{Name: "person_petroglyphs_accounting_documentation", Type: field.TypeInt, Nullable: true},
		{Name: "region_petroglyphs", Type: field.TypeInt, Nullable: true},
	}
	// PetroglyphsTable holds the schema information for the "petroglyphs" table.
	PetroglyphsTable = &schema.Table{
		Name:       "petroglyphs",
		Columns:    PetroglyphsColumns,
		PrimaryKey: []*schema.Column{PetroglyphsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "petroglyphs_collections_petroglyphs",
				Columns:    []*schema.Column{PetroglyphsColumns[33]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "petroglyphs_cultures_petroglyphs",
				Columns:    []*schema.Column{PetroglyphsColumns[34]},
				RefColumns: []*schema.Column{CulturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "petroglyphs_locations_petroglyphs_accounting_documentation",
				Columns:    []*schema.Column{PetroglyphsColumns[35]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "petroglyphs_models_petroglyphs",
				Columns:    []*schema.Column{PetroglyphsColumns[36]},
				RefColumns: []*schema.Column{ModelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "petroglyphs_mounds_petroglyphs",
				Columns:    []*schema.Column{PetroglyphsColumns[37]},
				RefColumns: []*schema.Column{MoundsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "petroglyphs_persons_petroglyphs_accounting_documentation",
				Columns:    []*schema.Column{PetroglyphsColumns[38]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "petroglyphs_regions_petroglyphs",
				Columns:    []*schema.Column{PetroglyphsColumns[39]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "begin_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "year", Type: field.TypeInt, Nullable: true},
		{Name: "begin_year", Type: field.TypeInt, Nullable: true},
		{Name: "end_year", Type: field.TypeInt, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// ProtectedAreasColumns holds the columns for the "protected_areas" table.
	ProtectedAreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "area", Type: field.TypeString, Nullable: true},
		{Name: "establishment_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "protected_area_category_protected_areas", Type: field.TypeInt, Nullable: true},
	}
	// ProtectedAreasTable holds the schema information for the "protected_areas" table.
	ProtectedAreasTable = &schema.Table{
		Name:       "protected_areas",
		Columns:    ProtectedAreasColumns,
		PrimaryKey: []*schema.Column{ProtectedAreasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "protected_areas_protected_area_categories_protected_areas",
				Columns:    []*schema.Column{ProtectedAreasColumns[11]},
				RefColumns: []*schema.Column{ProtectedAreaCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProtectedAreaCategoriesColumns holds the columns for the "protected_area_categories" table.
	ProtectedAreaCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// ProtectedAreaCategoriesTable holds the schema information for the "protected_area_categories" table.
	ProtectedAreaCategoriesTable = &schema.Table{
		Name:       "protected_area_categories",
		Columns:    ProtectedAreaCategoriesColumns,
		PrimaryKey: []*schema.Column{ProtectedAreaCategoriesColumns[0]},
	}
	// ProtectedAreaPicturesColumns holds the columns for the "protected_area_pictures" table.
	ProtectedAreaPicturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"listed", "unlisted", "draft"}, Default: "draft"},
		{Name: "primary_image_url", Type: field.TypeString, Nullable: true},
		{Name: "additional_images_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "shooting_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "geometry", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry"}},
		{Name: "collection_protected_area_pictures", Type: field.TypeInt},
		{Name: "country_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "district_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "license_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "location_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "person_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "protected_area_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "region_protected_area_pictures", Type: field.TypeInt, Nullable: true},
		{Name: "settlement_protected_area_pictures", Type: field.TypeInt, Nullable: true},
	}
	// ProtectedAreaPicturesTable holds the schema information for the "protected_area_pictures" table.
	ProtectedAreaPicturesTable = &schema.Table{
		Name:       "protected_area_pictures",
		Columns:    ProtectedAreaPicturesColumns,
		PrimaryKey: []*schema.Column{ProtectedAreaPicturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "protected_area_pictures_collections_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[14]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "protected_area_pictures_countries_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[15]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_districts_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[16]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_licenses_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[17]},
				RefColumns: []*schema.Column{LicensesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_locations_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[18]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_persons_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[19]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_protected_areas_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[20]},
				RefColumns: []*schema.Column{ProtectedAreasColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_regions_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[21]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "protected_area_pictures_settlements_protected_area_pictures",
				Columns:    []*schema.Column{ProtectedAreaPicturesColumns[22]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PublicationsColumns holds the columns for the "publications" table.
	PublicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// PublicationsTable holds the schema information for the "publications" table.
	PublicationsTable = &schema.Table{
		Name:       "publications",
		Columns:    PublicationsColumns,
		PrimaryKey: []*schema.Column{PublicationsColumns[0]},
	}
	// PublishersColumns holds the columns for the "publishers" table.
	PublishersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// PublishersTable holds the schema information for the "publishers" table.
	PublishersTable = &schema.Table{
		Name:       "publishers",
		Columns:    PublishersColumns,
		PrimaryKey: []*schema.Column{PublishersColumns[0]},
	}
	// RegionsColumns holds the columns for the "regions" table.
	RegionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "country_regions", Type: field.TypeInt, Nullable: true},
	}
	// RegionsTable holds the schema information for the "regions" table.
	RegionsTable = &schema.Table{
		Name:       "regions",
		Columns:    RegionsColumns,
		PrimaryKey: []*schema.Column{RegionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "regions_countries_regions",
				Columns:    []*schema.Column{RegionsColumns[9]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SetsColumns holds the columns for the "sets" table.
	SetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// SetsTable holds the schema information for the "sets" table.
	SetsTable = &schema.Table{
		Name:       "sets",
		Columns:    SetsColumns,
		PrimaryKey: []*schema.Column{SetsColumns[0]},
	}
	// SettlementsColumns holds the columns for the "settlements" table.
	SettlementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
		{Name: "district_settlements", Type: field.TypeInt, Nullable: true},
		{Name: "region_settlements", Type: field.TypeInt, Nullable: true},
	}
	// SettlementsTable holds the schema information for the "settlements" table.
	SettlementsTable = &schema.Table{
		Name:       "settlements",
		Columns:    SettlementsColumns,
		PrimaryKey: []*schema.Column{SettlementsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "settlements_districts_settlements",
				Columns:    []*schema.Column{SettlementsColumns[9]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "settlements_regions_settlements",
				Columns:    []*schema.Column{SettlementsColumns[10]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TechniquesColumns holds the columns for the "techniques" table.
	TechniquesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "abbreviation", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "external_link", Type: field.TypeString, Nullable: true},
	}
	// TechniquesTable holds the schema information for the "techniques" table.
	TechniquesTable = &schema.Table{
		Name:       "techniques",
		Columns:    TechniquesColumns,
		PrimaryKey: []*schema.Column{TechniquesColumns[0]},
	}
	// VisitsColumns holds the columns for the "visits" table.
	VisitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "year", Type: field.TypeInt, Nullable: true},
	}
	// VisitsTable holds the schema information for the "visits" table.
	VisitsTable = &schema.Table{
		Name:       "visits",
		Columns:    VisitsColumns,
		PrimaryKey: []*schema.Column{VisitsColumns[0]},
	}
	// ArtGenreArtColumns holds the columns for the "art_genre_art" table.
	ArtGenreArtColumns = []*schema.Column{
		{Name: "art_genre_id", Type: field.TypeInt},
		{Name: "art_id", Type: field.TypeInt},
	}
	// ArtGenreArtTable holds the schema information for the "art_genre_art" table.
	ArtGenreArtTable = &schema.Table{
		Name:       "art_genre_art",
		Columns:    ArtGenreArtColumns,
		PrimaryKey: []*schema.Column{ArtGenreArtColumns[0], ArtGenreArtColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "art_genre_art_art_genre_id",
				Columns:    []*schema.Column{ArtGenreArtColumns[0]},
				RefColumns: []*schema.Column{ArtGenresColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "art_genre_art_art_id",
				Columns:    []*schema.Column{ArtGenreArtColumns[1]},
				RefColumns: []*schema.Column{ArtsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ArtStyleArtColumns holds the columns for the "art_style_art" table.
	ArtStyleArtColumns = []*schema.Column{
		{Name: "art_style_id", Type: field.TypeInt},
		{Name: "art_id", Type: field.TypeInt},
	}
	// ArtStyleArtTable holds the schema information for the "art_style_art" table.
	ArtStyleArtTable = &schema.Table{
		Name:       "art_style_art",
		Columns:    ArtStyleArtColumns,
		PrimaryKey: []*schema.Column{ArtStyleArtColumns[0], ArtStyleArtColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "art_style_art_art_style_id",
				Columns:    []*schema.Column{ArtStyleArtColumns[0]},
				RefColumns: []*schema.Column{ArtStylesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "art_style_art_art_id",
				Columns:    []*schema.Column{ArtStyleArtColumns[1]},
				RefColumns: []*schema.Column{ArtsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// BookGenreBooksColumns holds the columns for the "book_genre_books" table.
	BookGenreBooksColumns = []*schema.Column{
		{Name: "book_genre_id", Type: field.TypeInt},
		{Name: "book_id", Type: field.TypeInt},
	}
	// BookGenreBooksTable holds the schema information for the "book_genre_books" table.
	BookGenreBooksTable = &schema.Table{
		Name:       "book_genre_books",
		Columns:    BookGenreBooksColumns,
		PrimaryKey: []*schema.Column{BookGenreBooksColumns[0], BookGenreBooksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "book_genre_books_book_genre_id",
				Columns:    []*schema.Column{BookGenreBooksColumns[0]},
				RefColumns: []*schema.Column{BookGenresColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "book_genre_books_book_id",
				Columns:    []*schema.Column{BookGenreBooksColumns[1]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CountryKnownAsBeforeColumns holds the columns for the "country_known_as_before" table.
	CountryKnownAsBeforeColumns = []*schema.Column{
		{Name: "country_id", Type: field.TypeInt},
		{Name: "known_as_after_id", Type: field.TypeInt},
	}
	// CountryKnownAsBeforeTable holds the schema information for the "country_known_as_before" table.
	CountryKnownAsBeforeTable = &schema.Table{
		Name:       "country_known_as_before",
		Columns:    CountryKnownAsBeforeColumns,
		PrimaryKey: []*schema.Column{CountryKnownAsBeforeColumns[0], CountryKnownAsBeforeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "country_known_as_before_country_id",
				Columns:    []*schema.Column{CountryKnownAsBeforeColumns[0]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "country_known_as_before_known_as_after_id",
				Columns:    []*schema.Column{CountryKnownAsBeforeColumns[1]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DistrictKnownAsBeforeColumns holds the columns for the "district_known_as_before" table.
	DistrictKnownAsBeforeColumns = []*schema.Column{
		{Name: "district_id", Type: field.TypeInt},
		{Name: "known_as_after_id", Type: field.TypeInt},
	}
	// DistrictKnownAsBeforeTable holds the schema information for the "district_known_as_before" table.
	DistrictKnownAsBeforeTable = &schema.Table{
		Name:       "district_known_as_before",
		Columns:    DistrictKnownAsBeforeColumns,
		PrimaryKey: []*schema.Column{DistrictKnownAsBeforeColumns[0], DistrictKnownAsBeforeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "district_known_as_before_district_id",
				Columns:    []*schema.Column{DistrictKnownAsBeforeColumns[0]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "district_known_as_before_known_as_after_id",
				Columns:    []*schema.Column{DistrictKnownAsBeforeColumns[1]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MediumArtifactsColumns holds the columns for the "medium_artifacts" table.
	MediumArtifactsColumns = []*schema.Column{
		{Name: "medium_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// MediumArtifactsTable holds the schema information for the "medium_artifacts" table.
	MediumArtifactsTable = &schema.Table{
		Name:       "medium_artifacts",
		Columns:    MediumArtifactsColumns,
		PrimaryKey: []*schema.Column{MediumArtifactsColumns[0], MediumArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "medium_artifacts_medium_id",
				Columns:    []*schema.Column{MediumArtifactsColumns[0]},
				RefColumns: []*schema.Column{MediaColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "medium_artifacts_artifact_id",
				Columns:    []*schema.Column{MediumArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MonumentSetsColumns holds the columns for the "monument_sets" table.
	MonumentSetsColumns = []*schema.Column{
		{Name: "monument_id", Type: field.TypeInt},
		{Name: "set_id", Type: field.TypeInt},
	}
	// MonumentSetsTable holds the schema information for the "monument_sets" table.
	MonumentSetsTable = &schema.Table{
		Name:       "monument_sets",
		Columns:    MonumentSetsColumns,
		PrimaryKey: []*schema.Column{MonumentSetsColumns[0], MonumentSetsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "monument_sets_monument_id",
				Columns:    []*schema.Column{MonumentSetsColumns[0]},
				RefColumns: []*schema.Column{MonumentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "monument_sets_set_id",
				Columns:    []*schema.Column{MonumentSetsColumns[1]},
				RefColumns: []*schema.Column{SetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonCollectionsColumns holds the columns for the "person_collections" table.
	PersonCollectionsColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "collection_id", Type: field.TypeInt},
	}
	// PersonCollectionsTable holds the schema information for the "person_collections" table.
	PersonCollectionsTable = &schema.Table{
		Name:       "person_collections",
		Columns:    PersonCollectionsColumns,
		PrimaryKey: []*schema.Column{PersonCollectionsColumns[0], PersonCollectionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_collections_person_id",
				Columns:    []*schema.Column{PersonCollectionsColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_collections_collection_id",
				Columns:    []*schema.Column{PersonCollectionsColumns[1]},
				RefColumns: []*schema.Column{CollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonArtifactsColumns holds the columns for the "person_artifacts" table.
	PersonArtifactsColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// PersonArtifactsTable holds the schema information for the "person_artifacts" table.
	PersonArtifactsTable = &schema.Table{
		Name:       "person_artifacts",
		Columns:    PersonArtifactsColumns,
		PrimaryKey: []*schema.Column{PersonArtifactsColumns[0], PersonArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_artifacts_person_id",
				Columns:    []*schema.Column{PersonArtifactsColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_artifacts_artifact_id",
				Columns:    []*schema.Column{PersonArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonBooksColumns holds the columns for the "person_books" table.
	PersonBooksColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "book_id", Type: field.TypeInt},
	}
	// PersonBooksTable holds the schema information for the "person_books" table.
	PersonBooksTable = &schema.Table{
		Name:       "person_books",
		Columns:    PersonBooksColumns,
		PrimaryKey: []*schema.Column{PersonBooksColumns[0], PersonBooksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_books_person_id",
				Columns:    []*schema.Column{PersonBooksColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_books_book_id",
				Columns:    []*schema.Column{PersonBooksColumns[1]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonVisitsColumns holds the columns for the "person_visits" table.
	PersonVisitsColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "visit_id", Type: field.TypeInt},
	}
	// PersonVisitsTable holds the schema information for the "person_visits" table.
	PersonVisitsTable = &schema.Table{
		Name:       "person_visits",
		Columns:    PersonVisitsColumns,
		PrimaryKey: []*schema.Column{PersonVisitsColumns[0], PersonVisitsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_visits_person_id",
				Columns:    []*schema.Column{PersonVisitsColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_visits_visit_id",
				Columns:    []*schema.Column{PersonVisitsColumns[1]},
				RefColumns: []*schema.Column{VisitsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonProjectsColumns holds the columns for the "person_projects" table.
	PersonProjectsColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "project_id", Type: field.TypeInt},
	}
	// PersonProjectsTable holds the schema information for the "person_projects" table.
	PersonProjectsTable = &schema.Table{
		Name:       "person_projects",
		Columns:    PersonProjectsColumns,
		PrimaryKey: []*schema.Column{PersonProjectsColumns[0], PersonProjectsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_projects_person_id",
				Columns:    []*schema.Column{PersonProjectsColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_projects_project_id",
				Columns:    []*schema.Column{PersonProjectsColumns[1]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonPublicationsColumns holds the columns for the "person_publications" table.
	PersonPublicationsColumns = []*schema.Column{
		{Name: "person_id", Type: field.TypeInt},
		{Name: "publication_id", Type: field.TypeInt},
	}
	// PersonPublicationsTable holds the schema information for the "person_publications" table.
	PersonPublicationsTable = &schema.Table{
		Name:       "person_publications",
		Columns:    PersonPublicationsColumns,
		PrimaryKey: []*schema.Column{PersonPublicationsColumns[0], PersonPublicationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "person_publications_person_id",
				Columns:    []*schema.Column{PersonPublicationsColumns[0]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "person_publications_publication_id",
				Columns:    []*schema.Column{PersonPublicationsColumns[1]},
				RefColumns: []*schema.Column{PublicationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonalCollectionArtColumns holds the columns for the "personal_collection_art" table.
	PersonalCollectionArtColumns = []*schema.Column{
		{Name: "personal_collection_id", Type: field.TypeInt},
		{Name: "art_id", Type: field.TypeInt},
	}
	// PersonalCollectionArtTable holds the schema information for the "personal_collection_art" table.
	PersonalCollectionArtTable = &schema.Table{
		Name:       "personal_collection_art",
		Columns:    PersonalCollectionArtColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionArtColumns[0], PersonalCollectionArtColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_collection_art_personal_collection_id",
				Columns:    []*schema.Column{PersonalCollectionArtColumns[0]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "personal_collection_art_art_id",
				Columns:    []*schema.Column{PersonalCollectionArtColumns[1]},
				RefColumns: []*schema.Column{ArtsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonalCollectionArtifactsColumns holds the columns for the "personal_collection_artifacts" table.
	PersonalCollectionArtifactsColumns = []*schema.Column{
		{Name: "personal_collection_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// PersonalCollectionArtifactsTable holds the schema information for the "personal_collection_artifacts" table.
	PersonalCollectionArtifactsTable = &schema.Table{
		Name:       "personal_collection_artifacts",
		Columns:    PersonalCollectionArtifactsColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionArtifactsColumns[0], PersonalCollectionArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_collection_artifacts_personal_collection_id",
				Columns:    []*schema.Column{PersonalCollectionArtifactsColumns[0]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "personal_collection_artifacts_artifact_id",
				Columns:    []*schema.Column{PersonalCollectionArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonalCollectionBooksColumns holds the columns for the "personal_collection_books" table.
	PersonalCollectionBooksColumns = []*schema.Column{
		{Name: "personal_collection_id", Type: field.TypeInt},
		{Name: "book_id", Type: field.TypeInt},
	}
	// PersonalCollectionBooksTable holds the schema information for the "personal_collection_books" table.
	PersonalCollectionBooksTable = &schema.Table{
		Name:       "personal_collection_books",
		Columns:    PersonalCollectionBooksColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionBooksColumns[0], PersonalCollectionBooksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_collection_books_personal_collection_id",
				Columns:    []*schema.Column{PersonalCollectionBooksColumns[0]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "personal_collection_books_book_id",
				Columns:    []*schema.Column{PersonalCollectionBooksColumns[1]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonalCollectionPetroglyphsColumns holds the columns for the "personal_collection_petroglyphs" table.
	PersonalCollectionPetroglyphsColumns = []*schema.Column{
		{Name: "personal_collection_id", Type: field.TypeInt},
		{Name: "petroglyph_id", Type: field.TypeInt},
	}
	// PersonalCollectionPetroglyphsTable holds the schema information for the "personal_collection_petroglyphs" table.
	PersonalCollectionPetroglyphsTable = &schema.Table{
		Name:       "personal_collection_petroglyphs",
		Columns:    PersonalCollectionPetroglyphsColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionPetroglyphsColumns[0], PersonalCollectionPetroglyphsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_collection_petroglyphs_personal_collection_id",
				Columns:    []*schema.Column{PersonalCollectionPetroglyphsColumns[0]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "personal_collection_petroglyphs_petroglyph_id",
				Columns:    []*schema.Column{PersonalCollectionPetroglyphsColumns[1]},
				RefColumns: []*schema.Column{PetroglyphsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PersonalCollectionProtectedAreaPicturesColumns holds the columns for the "personal_collection_protected_area_pictures" table.
	PersonalCollectionProtectedAreaPicturesColumns = []*schema.Column{
		{Name: "personal_collection_id", Type: field.TypeInt},
		{Name: "protected_area_picture_id", Type: field.TypeInt},
	}
	// PersonalCollectionProtectedAreaPicturesTable holds the schema information for the "personal_collection_protected_area_pictures" table.
	PersonalCollectionProtectedAreaPicturesTable = &schema.Table{
		Name:       "personal_collection_protected_area_pictures",
		Columns:    PersonalCollectionProtectedAreaPicturesColumns,
		PrimaryKey: []*schema.Column{PersonalCollectionProtectedAreaPicturesColumns[0], PersonalCollectionProtectedAreaPicturesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_collection_protected_area_pictures_personal_collection_id",
				Columns:    []*schema.Column{PersonalCollectionProtectedAreaPicturesColumns[0]},
				RefColumns: []*schema.Column{PersonalCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "personal_collection_protected_area_pictures_protected_area_picture_id",
				Columns:    []*schema.Column{PersonalCollectionProtectedAreaPicturesColumns[1]},
				RefColumns: []*schema.Column{ProtectedAreaPicturesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProjectArtifactsColumns holds the columns for the "project_artifacts" table.
	ProjectArtifactsColumns = []*schema.Column{
		{Name: "project_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// ProjectArtifactsTable holds the schema information for the "project_artifacts" table.
	ProjectArtifactsTable = &schema.Table{
		Name:       "project_artifacts",
		Columns:    ProjectArtifactsColumns,
		PrimaryKey: []*schema.Column{ProjectArtifactsColumns[0], ProjectArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_artifacts_project_id",
				Columns:    []*schema.Column{ProjectArtifactsColumns[0]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "project_artifacts_artifact_id",
				Columns:    []*schema.Column{ProjectArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PublicationArtifactsColumns holds the columns for the "publication_artifacts" table.
	PublicationArtifactsColumns = []*schema.Column{
		{Name: "publication_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// PublicationArtifactsTable holds the schema information for the "publication_artifacts" table.
	PublicationArtifactsTable = &schema.Table{
		Name:       "publication_artifacts",
		Columns:    PublicationArtifactsColumns,
		PrimaryKey: []*schema.Column{PublicationArtifactsColumns[0], PublicationArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publication_artifacts_publication_id",
				Columns:    []*schema.Column{PublicationArtifactsColumns[0]},
				RefColumns: []*schema.Column{PublicationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "publication_artifacts_artifact_id",
				Columns:    []*schema.Column{PublicationArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PublicationPetroglyphsColumns holds the columns for the "publication_petroglyphs" table.
	PublicationPetroglyphsColumns = []*schema.Column{
		{Name: "publication_id", Type: field.TypeInt},
		{Name: "petroglyph_id", Type: field.TypeInt},
	}
	// PublicationPetroglyphsTable holds the schema information for the "publication_petroglyphs" table.
	PublicationPetroglyphsTable = &schema.Table{
		Name:       "publication_petroglyphs",
		Columns:    PublicationPetroglyphsColumns,
		PrimaryKey: []*schema.Column{PublicationPetroglyphsColumns[0], PublicationPetroglyphsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publication_petroglyphs_publication_id",
				Columns:    []*schema.Column{PublicationPetroglyphsColumns[0]},
				RefColumns: []*schema.Column{PublicationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "publication_petroglyphs_petroglyph_id",
				Columns:    []*schema.Column{PublicationPetroglyphsColumns[1]},
				RefColumns: []*schema.Column{PetroglyphsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RegionKnownAsBeforeColumns holds the columns for the "region_known_as_before" table.
	RegionKnownAsBeforeColumns = []*schema.Column{
		{Name: "region_id", Type: field.TypeInt},
		{Name: "known_as_after_id", Type: field.TypeInt},
	}
	// RegionKnownAsBeforeTable holds the schema information for the "region_known_as_before" table.
	RegionKnownAsBeforeTable = &schema.Table{
		Name:       "region_known_as_before",
		Columns:    RegionKnownAsBeforeColumns,
		PrimaryKey: []*schema.Column{RegionKnownAsBeforeColumns[0], RegionKnownAsBeforeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "region_known_as_before_region_id",
				Columns:    []*schema.Column{RegionKnownAsBeforeColumns[0]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "region_known_as_before_known_as_after_id",
				Columns:    []*schema.Column{RegionKnownAsBeforeColumns[1]},
				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SettlementKnownAsBeforeColumns holds the columns for the "settlement_known_as_before" table.
	SettlementKnownAsBeforeColumns = []*schema.Column{
		{Name: "settlement_id", Type: field.TypeInt},
		{Name: "known_as_after_id", Type: field.TypeInt},
	}
	// SettlementKnownAsBeforeTable holds the schema information for the "settlement_known_as_before" table.
	SettlementKnownAsBeforeTable = &schema.Table{
		Name:       "settlement_known_as_before",
		Columns:    SettlementKnownAsBeforeColumns,
		PrimaryKey: []*schema.Column{SettlementKnownAsBeforeColumns[0], SettlementKnownAsBeforeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "settlement_known_as_before_settlement_id",
				Columns:    []*schema.Column{SettlementKnownAsBeforeColumns[0]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "settlement_known_as_before_known_as_after_id",
				Columns:    []*schema.Column{SettlementKnownAsBeforeColumns[1]},
				RefColumns: []*schema.Column{SettlementsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TechniqueArtColumns holds the columns for the "technique_art" table.
	TechniqueArtColumns = []*schema.Column{
		{Name: "technique_id", Type: field.TypeInt},
		{Name: "art_id", Type: field.TypeInt},
	}
	// TechniqueArtTable holds the schema information for the "technique_art" table.
	TechniqueArtTable = &schema.Table{
		Name:       "technique_art",
		Columns:    TechniqueArtColumns,
		PrimaryKey: []*schema.Column{TechniqueArtColumns[0], TechniqueArtColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "technique_art_technique_id",
				Columns:    []*schema.Column{TechniqueArtColumns[0]},
				RefColumns: []*schema.Column{TechniquesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "technique_art_art_id",
				Columns:    []*schema.Column{TechniqueArtColumns[1]},
				RefColumns: []*schema.Column{ArtsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TechniqueArtifactsColumns holds the columns for the "technique_artifacts" table.
	TechniqueArtifactsColumns = []*schema.Column{
		{Name: "technique_id", Type: field.TypeInt},
		{Name: "artifact_id", Type: field.TypeInt},
	}
	// TechniqueArtifactsTable holds the schema information for the "technique_artifacts" table.
	TechniqueArtifactsTable = &schema.Table{
		Name:       "technique_artifacts",
		Columns:    TechniqueArtifactsColumns,
		PrimaryKey: []*schema.Column{TechniqueArtifactsColumns[0], TechniqueArtifactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "technique_artifacts_technique_id",
				Columns:    []*schema.Column{TechniqueArtifactsColumns[0]},
				RefColumns: []*schema.Column{TechniquesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "technique_artifacts_artifact_id",
				Columns:    []*schema.Column{TechniqueArtifactsColumns[1]},
				RefColumns: []*schema.Column{ArtifactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TechniquePetroglyphsColumns holds the columns for the "technique_petroglyphs" table.
	TechniquePetroglyphsColumns = []*schema.Column{
		{Name: "technique_id", Type: field.TypeInt},
		{Name: "petroglyph_id", Type: field.TypeInt},
	}
	// TechniquePetroglyphsTable holds the schema information for the "technique_petroglyphs" table.
	TechniquePetroglyphsTable = &schema.Table{
		Name:       "technique_petroglyphs",
		Columns:    TechniquePetroglyphsColumns,
		PrimaryKey: []*schema.Column{TechniquePetroglyphsColumns[0], TechniquePetroglyphsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "technique_petroglyphs_technique_id",
				Columns:    []*schema.Column{TechniquePetroglyphsColumns[0]},
				RefColumns: []*schema.Column{TechniquesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "technique_petroglyphs_petroglyph_id",
				Columns:    []*schema.Column{TechniquePetroglyphsColumns[1]},
				RefColumns: []*schema.Column{PetroglyphsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VisitMoundsColumns holds the columns for the "visit_mounds" table.
	VisitMoundsColumns = []*schema.Column{
		{Name: "visit_id", Type: field.TypeInt},
		{Name: "mound_id", Type: field.TypeInt},
	}
	// VisitMoundsTable holds the schema information for the "visit_mounds" table.
	VisitMoundsTable = &schema.Table{
		Name:       "visit_mounds",
		Columns:    VisitMoundsColumns,
		PrimaryKey: []*schema.Column{VisitMoundsColumns[0], VisitMoundsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "visit_mounds_visit_id",
				Columns:    []*schema.Column{VisitMoundsColumns[0]},
				RefColumns: []*schema.Column{VisitsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "visit_mounds_mound_id",
				Columns:    []*schema.Column{VisitMoundsColumns[1]},
				RefColumns: []*schema.Column{MoundsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArtsTable,
		ArtGenresTable,
		ArtStylesTable,
		ArtifactsTable,
		AuditLogsTable,
		BooksTable,
		BookGenresTable,
		CategoriesTable,
		CollectionsTable,
		CountriesTable,
		CulturesTable,
		DendrochronologicalAnalysesTable,
		DendrochronologiesTable,
		DistrictsTable,
		EthnosTable,
		FavouritesTable,
		InterviewsTable,
		KeywordsTable,
		LicensesTable,
		LocationsTable,
		MediaTable,
		ModelsTable,
		MonumentsTable,
		MoundsTable,
		OrganizationsTable,
		PeriodicalsTable,
		PersonsTable,
		PersonalCollectionsTable,
		PetroglyphsTable,
		ProjectsTable,
		ProtectedAreasTable,
		ProtectedAreaCategoriesTable,
		ProtectedAreaPicturesTable,
		PublicationsTable,
		PublishersTable,
		RegionsTable,
		SetsTable,
		SettlementsTable,
		TechniquesTable,
		VisitsTable,
		ArtGenreArtTable,
		ArtStyleArtTable,
		BookGenreBooksTable,
		CountryKnownAsBeforeTable,
		DistrictKnownAsBeforeTable,
		MediumArtifactsTable,
		MonumentSetsTable,
		PersonCollectionsTable,
		PersonArtifactsTable,
		PersonBooksTable,
		PersonVisitsTable,
		PersonProjectsTable,
		PersonPublicationsTable,
		PersonalCollectionArtTable,
		PersonalCollectionArtifactsTable,
		PersonalCollectionBooksTable,
		PersonalCollectionPetroglyphsTable,
		PersonalCollectionProtectedAreaPicturesTable,
		ProjectArtifactsTable,
		PublicationArtifactsTable,
		PublicationPetroglyphsTable,
		RegionKnownAsBeforeTable,
		SettlementKnownAsBeforeTable,
		TechniqueArtTable,
		TechniqueArtifactsTable,
		TechniquePetroglyphsTable,
		VisitMoundsTable,
	}
)

func init() {
	ArtsTable.ForeignKeys[0].RefTable = CollectionsTable
	ArtsTable.ForeignKeys[1].RefTable = CountriesTable
	ArtsTable.ForeignKeys[2].RefTable = DistrictsTable
	ArtsTable.ForeignKeys[3].RefTable = PersonsTable
	ArtsTable.ForeignKeys[4].RefTable = RegionsTable
	ArtsTable.ForeignKeys[5].RefTable = SettlementsTable
	ArtifactsTable.ForeignKeys[0].RefTable = CollectionsTable
	ArtifactsTable.ForeignKeys[1].RefTable = CountriesTable
	ArtifactsTable.ForeignKeys[2].RefTable = CulturesTable
	ArtifactsTable.ForeignKeys[3].RefTable = DistrictsTable
	ArtifactsTable.ForeignKeys[4].RefTable = EthnosTable
	ArtifactsTable.ForeignKeys[5].RefTable = LicensesTable
	ArtifactsTable.ForeignKeys[6].RefTable = LocationsTable
	ArtifactsTable.ForeignKeys[7].RefTable = ModelsTable
	ArtifactsTable.ForeignKeys[8].RefTable = MonumentsTable
	ArtifactsTable.ForeignKeys[9].RefTable = OrganizationsTable
	ArtifactsTable.ForeignKeys[10].RefTable = PersonsTable
	ArtifactsTable.ForeignKeys[11].RefTable = RegionsTable
	ArtifactsTable.ForeignKeys[12].RefTable = SetsTable
	ArtifactsTable.ForeignKeys[13].RefTable = SettlementsTable
	BooksTable.ForeignKeys[0].RefTable = CollectionsTable
	BooksTable.ForeignKeys[1].RefTable = CountriesTable
	BooksTable.ForeignKeys[2].RefTable = DistrictsTable
	BooksTable.ForeignKeys[3].RefTable = LicensesTable
	BooksTable.ForeignKeys[4].RefTable = LocationsTable
	BooksTable.ForeignKeys[5].RefTable = OrganizationsTable
	BooksTable.ForeignKeys[6].RefTable = PeriodicalsTable
	BooksTable.ForeignKeys[7].RefTable = PublishersTable
	BooksTable.ForeignKeys[8].RefTable = RegionsTable
	BooksTable.ForeignKeys[9].RefTable = SettlementsTable
	CollectionsTable.ForeignKeys[0].RefTable = CategoriesTable
	DendrochronologicalAnalysesTable.ForeignKeys[0].RefTable = DendrochronologiesTable
	DendrochronologiesTable.ForeignKeys[0].RefTable = CollectionsTable
	DendrochronologiesTable.ForeignKeys[1].RefTable = PersonalCollectionsTable
	DistrictsTable.ForeignKeys[0].RefTable = RegionsTable
	LocationsTable.ForeignKeys[0].RefTable = CountriesTable
	LocationsTable.ForeignKeys[1].RefTable = DistrictsTable
	LocationsTable.ForeignKeys[2].RefTable = SettlementsTable
	LocationsTable.ForeignKeys[3].RefTable = RegionsTable
	PersonsTable.ForeignKeys[0].RefTable = OrganizationsTable
	PetroglyphsTable.ForeignKeys[0].RefTable = CollectionsTable
	PetroglyphsTable.ForeignKeys[1].RefTable = CulturesTable
	PetroglyphsTable.ForeignKeys[2].RefTable = LocationsTable
	PetroglyphsTable.ForeignKeys[3].RefTable = ModelsTable
	PetroglyphsTable.ForeignKeys[4].RefTable = MoundsTable
	PetroglyphsTable.ForeignKeys[5].RefTable = PersonsTable
	PetroglyphsTable.ForeignKeys[6].RefTable = RegionsTable
	ProtectedAreasTable.ForeignKeys[0].RefTable = ProtectedAreaCategoriesTable
	ProtectedAreaPicturesTable.ForeignKeys[0].RefTable = CollectionsTable
	ProtectedAreaPicturesTable.ForeignKeys[1].RefTable = CountriesTable
	ProtectedAreaPicturesTable.ForeignKeys[2].RefTable = DistrictsTable
	ProtectedAreaPicturesTable.ForeignKeys[3].RefTable = LicensesTable
	ProtectedAreaPicturesTable.ForeignKeys[4].RefTable = LocationsTable
	ProtectedAreaPicturesTable.ForeignKeys[5].RefTable = PersonsTable
	ProtectedAreaPicturesTable.ForeignKeys[6].RefTable = ProtectedAreasTable
	ProtectedAreaPicturesTable.ForeignKeys[7].RefTable = RegionsTable
	ProtectedAreaPicturesTable.ForeignKeys[8].RefTable = SettlementsTable
	RegionsTable.ForeignKeys[0].RefTable = CountriesTable
	SettlementsTable.ForeignKeys[0].RefTable = DistrictsTable
	SettlementsTable.ForeignKeys[1].RefTable = RegionsTable
	ArtGenreArtTable.ForeignKeys[0].RefTable = ArtGenresTable
	ArtGenreArtTable.ForeignKeys[1].RefTable = ArtsTable
	ArtStyleArtTable.ForeignKeys[0].RefTable = ArtStylesTable
	ArtStyleArtTable.ForeignKeys[1].RefTable = ArtsTable
	BookGenreBooksTable.ForeignKeys[0].RefTable = BookGenresTable
	BookGenreBooksTable.ForeignKeys[1].RefTable = BooksTable
	CountryKnownAsBeforeTable.ForeignKeys[0].RefTable = CountriesTable
	CountryKnownAsBeforeTable.ForeignKeys[1].RefTable = CountriesTable
	DistrictKnownAsBeforeTable.ForeignKeys[0].RefTable = DistrictsTable
	DistrictKnownAsBeforeTable.ForeignKeys[1].RefTable = DistrictsTable
	MediumArtifactsTable.ForeignKeys[0].RefTable = MediaTable
	MediumArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	MonumentSetsTable.ForeignKeys[0].RefTable = MonumentsTable
	MonumentSetsTable.ForeignKeys[1].RefTable = SetsTable
	PersonCollectionsTable.ForeignKeys[0].RefTable = PersonsTable
	PersonCollectionsTable.ForeignKeys[1].RefTable = CollectionsTable
	PersonArtifactsTable.ForeignKeys[0].RefTable = PersonsTable
	PersonArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	PersonBooksTable.ForeignKeys[0].RefTable = PersonsTable
	PersonBooksTable.ForeignKeys[1].RefTable = BooksTable
	PersonVisitsTable.ForeignKeys[0].RefTable = PersonsTable
	PersonVisitsTable.ForeignKeys[1].RefTable = VisitsTable
	PersonProjectsTable.ForeignKeys[0].RefTable = PersonsTable
	PersonProjectsTable.ForeignKeys[1].RefTable = ProjectsTable
	PersonPublicationsTable.ForeignKeys[0].RefTable = PersonsTable
	PersonPublicationsTable.ForeignKeys[1].RefTable = PublicationsTable
	PersonalCollectionArtTable.ForeignKeys[0].RefTable = PersonalCollectionsTable
	PersonalCollectionArtTable.ForeignKeys[1].RefTable = ArtsTable
	PersonalCollectionArtifactsTable.ForeignKeys[0].RefTable = PersonalCollectionsTable
	PersonalCollectionArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	PersonalCollectionBooksTable.ForeignKeys[0].RefTable = PersonalCollectionsTable
	PersonalCollectionBooksTable.ForeignKeys[1].RefTable = BooksTable
	PersonalCollectionPetroglyphsTable.ForeignKeys[0].RefTable = PersonalCollectionsTable
	PersonalCollectionPetroglyphsTable.ForeignKeys[1].RefTable = PetroglyphsTable
	PersonalCollectionProtectedAreaPicturesTable.ForeignKeys[0].RefTable = PersonalCollectionsTable
	PersonalCollectionProtectedAreaPicturesTable.ForeignKeys[1].RefTable = ProtectedAreaPicturesTable
	ProjectArtifactsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	PublicationArtifactsTable.ForeignKeys[0].RefTable = PublicationsTable
	PublicationArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	PublicationPetroglyphsTable.ForeignKeys[0].RefTable = PublicationsTable
	PublicationPetroglyphsTable.ForeignKeys[1].RefTable = PetroglyphsTable
	RegionKnownAsBeforeTable.ForeignKeys[0].RefTable = RegionsTable
	RegionKnownAsBeforeTable.ForeignKeys[1].RefTable = RegionsTable
	SettlementKnownAsBeforeTable.ForeignKeys[0].RefTable = SettlementsTable
	SettlementKnownAsBeforeTable.ForeignKeys[1].RefTable = SettlementsTable
	TechniqueArtTable.ForeignKeys[0].RefTable = TechniquesTable
	TechniqueArtTable.ForeignKeys[1].RefTable = ArtsTable
	TechniqueArtifactsTable.ForeignKeys[0].RefTable = TechniquesTable
	TechniqueArtifactsTable.ForeignKeys[1].RefTable = ArtifactsTable
	TechniquePetroglyphsTable.ForeignKeys[0].RefTable = TechniquesTable
	TechniquePetroglyphsTable.ForeignKeys[1].RefTable = PetroglyphsTable
	VisitMoundsTable.ForeignKeys[0].RefTable = VisitsTable
	VisitMoundsTable.ForeignKeys[1].RefTable = MoundsTable
}
