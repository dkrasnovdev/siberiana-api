// Code generated by ent, DO NOT EDIT.

package petroglyph

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/dkrasnovdev/siberiana-api/ent/predicate"
	"github.com/dkrasnovdev/siberiana-api/internal/ent/types"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldUpdatedBy, v))
}

// Dating applies equality check predicate on the "dating" field. It's identical to DatingEQ.
func Dating(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDating, v))
}

// DatingStart applies equality check predicate on the "dating_start" field. It's identical to DatingStartEQ.
func DatingStart(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDatingStart, v))
}

// DatingEnd applies equality check predicate on the "dating_end" field. It's identical to DatingEndEQ.
func DatingEnd(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDatingEnd, v))
}

// DisplayName applies equality check predicate on the "display_name" field. It's identical to DisplayNameEQ.
func DisplayName(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDisplayName, v))
}

// Abbreviation applies equality check predicate on the "abbreviation" field. It's identical to AbbreviationEQ.
func Abbreviation(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAbbreviation, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDescription, v))
}

// ExternalLink applies equality check predicate on the "external_link" field. It's identical to ExternalLinkEQ.
func ExternalLink(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldExternalLink, v))
}

// PrimaryImageURL applies equality check predicate on the "primary_image_url" field. It's identical to PrimaryImageURLEQ.
func PrimaryImageURL(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPrimaryImageURL, v))
}

// Height applies equality check predicate on the "height" field. It's identical to HeightEQ.
func Height(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldHeight, v))
}

// Width applies equality check predicate on the "width" field. It's identical to WidthEQ.
func Width(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldWidth, v))
}

// Length applies equality check predicate on the "length" field. It's identical to LengthEQ.
func Length(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldLength, v))
}

// Depth applies equality check predicate on the "depth" field. It's identical to DepthEQ.
func Depth(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDepth, v))
}

// Diameter applies equality check predicate on the "diameter" field. It's identical to DiameterEQ.
func Diameter(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDiameter, v))
}

// Weight applies equality check predicate on the "weight" field. It's identical to WeightEQ.
func Weight(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldWeight, v))
}

// Dimensions applies equality check predicate on the "dimensions" field. It's identical to DimensionsEQ.
func Dimensions(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDimensions, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDeletedBy, v))
}

// Number applies equality check predicate on the "number" field. It's identical to NumberEQ.
func Number(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldNumber, v))
}

// Orientation applies equality check predicate on the "orientation" field. It's identical to OrientationEQ.
func Orientation(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldOrientation, v))
}

// Position applies equality check predicate on the "position" field. It's identical to PositionEQ.
func Position(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPosition, v))
}

// GeometricShape applies equality check predicate on the "geometric_shape" field. It's identical to GeometricShapeEQ.
func GeometricShape(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldGeometricShape, v))
}

// PlanePreservation applies equality check predicate on the "plane_preservation" field. It's identical to PlanePreservationEQ.
func PlanePreservation(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPlanePreservation, v))
}

// PhotoCode applies equality check predicate on the "photo_code" field. It's identical to PhotoCodeEQ.
func PhotoCode(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPhotoCode, v))
}

// AccountingDocumentationInformation applies equality check predicate on the "accounting_documentation_information" field. It's identical to AccountingDocumentationInformationEQ.
func AccountingDocumentationInformation(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationDate applies equality check predicate on the "accounting_documentation_date" field. It's identical to AccountingDocumentationDateEQ.
func AccountingDocumentationDate(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAccountingDocumentationDate, v))
}

// Geometry applies equality check predicate on the "geometry" field. It's identical to GeometryEQ.
func Geometry(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldGeometry, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DatingEQ applies the EQ predicate on the "dating" field.
func DatingEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDating, v))
}

// DatingNEQ applies the NEQ predicate on the "dating" field.
func DatingNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDating, v))
}

// DatingIn applies the In predicate on the "dating" field.
func DatingIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDating, vs...))
}

// DatingNotIn applies the NotIn predicate on the "dating" field.
func DatingNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDating, vs...))
}

// DatingGT applies the GT predicate on the "dating" field.
func DatingGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDating, v))
}

// DatingGTE applies the GTE predicate on the "dating" field.
func DatingGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDating, v))
}

// DatingLT applies the LT predicate on the "dating" field.
func DatingLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDating, v))
}

// DatingLTE applies the LTE predicate on the "dating" field.
func DatingLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDating, v))
}

// DatingContains applies the Contains predicate on the "dating" field.
func DatingContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldDating, v))
}

// DatingHasPrefix applies the HasPrefix predicate on the "dating" field.
func DatingHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldDating, v))
}

// DatingHasSuffix applies the HasSuffix predicate on the "dating" field.
func DatingHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldDating, v))
}

// DatingIsNil applies the IsNil predicate on the "dating" field.
func DatingIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDating))
}

// DatingNotNil applies the NotNil predicate on the "dating" field.
func DatingNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDating))
}

// DatingEqualFold applies the EqualFold predicate on the "dating" field.
func DatingEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldDating, v))
}

// DatingContainsFold applies the ContainsFold predicate on the "dating" field.
func DatingContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldDating, v))
}

// DatingStartEQ applies the EQ predicate on the "dating_start" field.
func DatingStartEQ(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDatingStart, v))
}

// DatingStartNEQ applies the NEQ predicate on the "dating_start" field.
func DatingStartNEQ(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDatingStart, v))
}

// DatingStartIn applies the In predicate on the "dating_start" field.
func DatingStartIn(vs ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDatingStart, vs...))
}

// DatingStartNotIn applies the NotIn predicate on the "dating_start" field.
func DatingStartNotIn(vs ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDatingStart, vs...))
}

// DatingStartGT applies the GT predicate on the "dating_start" field.
func DatingStartGT(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDatingStart, v))
}

// DatingStartGTE applies the GTE predicate on the "dating_start" field.
func DatingStartGTE(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDatingStart, v))
}

// DatingStartLT applies the LT predicate on the "dating_start" field.
func DatingStartLT(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDatingStart, v))
}

// DatingStartLTE applies the LTE predicate on the "dating_start" field.
func DatingStartLTE(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDatingStart, v))
}

// DatingStartIsNil applies the IsNil predicate on the "dating_start" field.
func DatingStartIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDatingStart))
}

// DatingStartNotNil applies the NotNil predicate on the "dating_start" field.
func DatingStartNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDatingStart))
}

// DatingEndEQ applies the EQ predicate on the "dating_end" field.
func DatingEndEQ(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDatingEnd, v))
}

// DatingEndNEQ applies the NEQ predicate on the "dating_end" field.
func DatingEndNEQ(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDatingEnd, v))
}

// DatingEndIn applies the In predicate on the "dating_end" field.
func DatingEndIn(vs ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDatingEnd, vs...))
}

// DatingEndNotIn applies the NotIn predicate on the "dating_end" field.
func DatingEndNotIn(vs ...int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDatingEnd, vs...))
}

// DatingEndGT applies the GT predicate on the "dating_end" field.
func DatingEndGT(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDatingEnd, v))
}

// DatingEndGTE applies the GTE predicate on the "dating_end" field.
func DatingEndGTE(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDatingEnd, v))
}

// DatingEndLT applies the LT predicate on the "dating_end" field.
func DatingEndLT(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDatingEnd, v))
}

// DatingEndLTE applies the LTE predicate on the "dating_end" field.
func DatingEndLTE(v int) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDatingEnd, v))
}

// DatingEndIsNil applies the IsNil predicate on the "dating_end" field.
func DatingEndIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDatingEnd))
}

// DatingEndNotNil applies the NotNil predicate on the "dating_end" field.
func DatingEndNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDatingEnd))
}

// DisplayNameEQ applies the EQ predicate on the "display_name" field.
func DisplayNameEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDisplayName, v))
}

// DisplayNameNEQ applies the NEQ predicate on the "display_name" field.
func DisplayNameNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDisplayName, v))
}

// DisplayNameIn applies the In predicate on the "display_name" field.
func DisplayNameIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDisplayName, vs...))
}

// DisplayNameNotIn applies the NotIn predicate on the "display_name" field.
func DisplayNameNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDisplayName, vs...))
}

// DisplayNameGT applies the GT predicate on the "display_name" field.
func DisplayNameGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDisplayName, v))
}

// DisplayNameGTE applies the GTE predicate on the "display_name" field.
func DisplayNameGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDisplayName, v))
}

// DisplayNameLT applies the LT predicate on the "display_name" field.
func DisplayNameLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDisplayName, v))
}

// DisplayNameLTE applies the LTE predicate on the "display_name" field.
func DisplayNameLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDisplayName, v))
}

// DisplayNameContains applies the Contains predicate on the "display_name" field.
func DisplayNameContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldDisplayName, v))
}

// DisplayNameHasPrefix applies the HasPrefix predicate on the "display_name" field.
func DisplayNameHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldDisplayName, v))
}

// DisplayNameHasSuffix applies the HasSuffix predicate on the "display_name" field.
func DisplayNameHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldDisplayName, v))
}

// DisplayNameIsNil applies the IsNil predicate on the "display_name" field.
func DisplayNameIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDisplayName))
}

// DisplayNameNotNil applies the NotNil predicate on the "display_name" field.
func DisplayNameNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDisplayName))
}

// DisplayNameEqualFold applies the EqualFold predicate on the "display_name" field.
func DisplayNameEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldDisplayName, v))
}

// DisplayNameContainsFold applies the ContainsFold predicate on the "display_name" field.
func DisplayNameContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldDisplayName, v))
}

// AbbreviationEQ applies the EQ predicate on the "abbreviation" field.
func AbbreviationEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAbbreviation, v))
}

// AbbreviationNEQ applies the NEQ predicate on the "abbreviation" field.
func AbbreviationNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldAbbreviation, v))
}

// AbbreviationIn applies the In predicate on the "abbreviation" field.
func AbbreviationIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldAbbreviation, vs...))
}

// AbbreviationNotIn applies the NotIn predicate on the "abbreviation" field.
func AbbreviationNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldAbbreviation, vs...))
}

// AbbreviationGT applies the GT predicate on the "abbreviation" field.
func AbbreviationGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldAbbreviation, v))
}

// AbbreviationGTE applies the GTE predicate on the "abbreviation" field.
func AbbreviationGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldAbbreviation, v))
}

// AbbreviationLT applies the LT predicate on the "abbreviation" field.
func AbbreviationLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldAbbreviation, v))
}

// AbbreviationLTE applies the LTE predicate on the "abbreviation" field.
func AbbreviationLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldAbbreviation, v))
}

// AbbreviationContains applies the Contains predicate on the "abbreviation" field.
func AbbreviationContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldAbbreviation, v))
}

// AbbreviationHasPrefix applies the HasPrefix predicate on the "abbreviation" field.
func AbbreviationHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldAbbreviation, v))
}

// AbbreviationHasSuffix applies the HasSuffix predicate on the "abbreviation" field.
func AbbreviationHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldAbbreviation, v))
}

// AbbreviationIsNil applies the IsNil predicate on the "abbreviation" field.
func AbbreviationIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldAbbreviation))
}

// AbbreviationNotNil applies the NotNil predicate on the "abbreviation" field.
func AbbreviationNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldAbbreviation))
}

// AbbreviationEqualFold applies the EqualFold predicate on the "abbreviation" field.
func AbbreviationEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldAbbreviation, v))
}

// AbbreviationContainsFold applies the ContainsFold predicate on the "abbreviation" field.
func AbbreviationContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldAbbreviation, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldDescription, v))
}

// ExternalLinkEQ applies the EQ predicate on the "external_link" field.
func ExternalLinkEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldExternalLink, v))
}

// ExternalLinkNEQ applies the NEQ predicate on the "external_link" field.
func ExternalLinkNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldExternalLink, v))
}

// ExternalLinkIn applies the In predicate on the "external_link" field.
func ExternalLinkIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldExternalLink, vs...))
}

// ExternalLinkNotIn applies the NotIn predicate on the "external_link" field.
func ExternalLinkNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldExternalLink, vs...))
}

// ExternalLinkGT applies the GT predicate on the "external_link" field.
func ExternalLinkGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldExternalLink, v))
}

// ExternalLinkGTE applies the GTE predicate on the "external_link" field.
func ExternalLinkGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldExternalLink, v))
}

// ExternalLinkLT applies the LT predicate on the "external_link" field.
func ExternalLinkLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldExternalLink, v))
}

// ExternalLinkLTE applies the LTE predicate on the "external_link" field.
func ExternalLinkLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldExternalLink, v))
}

// ExternalLinkContains applies the Contains predicate on the "external_link" field.
func ExternalLinkContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldExternalLink, v))
}

// ExternalLinkHasPrefix applies the HasPrefix predicate on the "external_link" field.
func ExternalLinkHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldExternalLink, v))
}

// ExternalLinkHasSuffix applies the HasSuffix predicate on the "external_link" field.
func ExternalLinkHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldExternalLink, v))
}

// ExternalLinkIsNil applies the IsNil predicate on the "external_link" field.
func ExternalLinkIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldExternalLink))
}

// ExternalLinkNotNil applies the NotNil predicate on the "external_link" field.
func ExternalLinkNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldExternalLink))
}

// ExternalLinkEqualFold applies the EqualFold predicate on the "external_link" field.
func ExternalLinkEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldExternalLink, v))
}

// ExternalLinkContainsFold applies the ContainsFold predicate on the "external_link" field.
func ExternalLinkContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldExternalLink, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldStatus))
}

// PrimaryImageURLEQ applies the EQ predicate on the "primary_image_url" field.
func PrimaryImageURLEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPrimaryImageURL, v))
}

// PrimaryImageURLNEQ applies the NEQ predicate on the "primary_image_url" field.
func PrimaryImageURLNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldPrimaryImageURL, v))
}

// PrimaryImageURLIn applies the In predicate on the "primary_image_url" field.
func PrimaryImageURLIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldPrimaryImageURL, vs...))
}

// PrimaryImageURLNotIn applies the NotIn predicate on the "primary_image_url" field.
func PrimaryImageURLNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldPrimaryImageURL, vs...))
}

// PrimaryImageURLGT applies the GT predicate on the "primary_image_url" field.
func PrimaryImageURLGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldPrimaryImageURL, v))
}

// PrimaryImageURLGTE applies the GTE predicate on the "primary_image_url" field.
func PrimaryImageURLGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldPrimaryImageURL, v))
}

// PrimaryImageURLLT applies the LT predicate on the "primary_image_url" field.
func PrimaryImageURLLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldPrimaryImageURL, v))
}

// PrimaryImageURLLTE applies the LTE predicate on the "primary_image_url" field.
func PrimaryImageURLLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldPrimaryImageURL, v))
}

// PrimaryImageURLContains applies the Contains predicate on the "primary_image_url" field.
func PrimaryImageURLContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldPrimaryImageURL, v))
}

// PrimaryImageURLHasPrefix applies the HasPrefix predicate on the "primary_image_url" field.
func PrimaryImageURLHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldPrimaryImageURL, v))
}

// PrimaryImageURLHasSuffix applies the HasSuffix predicate on the "primary_image_url" field.
func PrimaryImageURLHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldPrimaryImageURL, v))
}

// PrimaryImageURLIsNil applies the IsNil predicate on the "primary_image_url" field.
func PrimaryImageURLIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldPrimaryImageURL))
}

// PrimaryImageURLNotNil applies the NotNil predicate on the "primary_image_url" field.
func PrimaryImageURLNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldPrimaryImageURL))
}

// PrimaryImageURLEqualFold applies the EqualFold predicate on the "primary_image_url" field.
func PrimaryImageURLEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldPrimaryImageURL, v))
}

// PrimaryImageURLContainsFold applies the ContainsFold predicate on the "primary_image_url" field.
func PrimaryImageURLContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldPrimaryImageURL, v))
}

// AdditionalImagesUrlsIsNil applies the IsNil predicate on the "additional_images_urls" field.
func AdditionalImagesUrlsIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldAdditionalImagesUrls))
}

// AdditionalImagesUrlsNotNil applies the NotNil predicate on the "additional_images_urls" field.
func AdditionalImagesUrlsNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldAdditionalImagesUrls))
}

// HeightEQ applies the EQ predicate on the "height" field.
func HeightEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldHeight, v))
}

// HeightNEQ applies the NEQ predicate on the "height" field.
func HeightNEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldHeight, v))
}

// HeightIn applies the In predicate on the "height" field.
func HeightIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldHeight, vs...))
}

// HeightNotIn applies the NotIn predicate on the "height" field.
func HeightNotIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldHeight, vs...))
}

// HeightGT applies the GT predicate on the "height" field.
func HeightGT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldHeight, v))
}

// HeightGTE applies the GTE predicate on the "height" field.
func HeightGTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldHeight, v))
}

// HeightLT applies the LT predicate on the "height" field.
func HeightLT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldHeight, v))
}

// HeightLTE applies the LTE predicate on the "height" field.
func HeightLTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldHeight, v))
}

// HeightIsNil applies the IsNil predicate on the "height" field.
func HeightIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldHeight))
}

// HeightNotNil applies the NotNil predicate on the "height" field.
func HeightNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldHeight))
}

// WidthEQ applies the EQ predicate on the "width" field.
func WidthEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldWidth, v))
}

// WidthNEQ applies the NEQ predicate on the "width" field.
func WidthNEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldWidth, v))
}

// WidthIn applies the In predicate on the "width" field.
func WidthIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldWidth, vs...))
}

// WidthNotIn applies the NotIn predicate on the "width" field.
func WidthNotIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldWidth, vs...))
}

// WidthGT applies the GT predicate on the "width" field.
func WidthGT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldWidth, v))
}

// WidthGTE applies the GTE predicate on the "width" field.
func WidthGTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldWidth, v))
}

// WidthLT applies the LT predicate on the "width" field.
func WidthLT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldWidth, v))
}

// WidthLTE applies the LTE predicate on the "width" field.
func WidthLTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldWidth, v))
}

// WidthIsNil applies the IsNil predicate on the "width" field.
func WidthIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldWidth))
}

// WidthNotNil applies the NotNil predicate on the "width" field.
func WidthNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldWidth))
}

// LengthEQ applies the EQ predicate on the "length" field.
func LengthEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldLength, v))
}

// LengthNEQ applies the NEQ predicate on the "length" field.
func LengthNEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldLength, v))
}

// LengthIn applies the In predicate on the "length" field.
func LengthIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldLength, vs...))
}

// LengthNotIn applies the NotIn predicate on the "length" field.
func LengthNotIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldLength, vs...))
}

// LengthGT applies the GT predicate on the "length" field.
func LengthGT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldLength, v))
}

// LengthGTE applies the GTE predicate on the "length" field.
func LengthGTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldLength, v))
}

// LengthLT applies the LT predicate on the "length" field.
func LengthLT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldLength, v))
}

// LengthLTE applies the LTE predicate on the "length" field.
func LengthLTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldLength, v))
}

// LengthIsNil applies the IsNil predicate on the "length" field.
func LengthIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldLength))
}

// LengthNotNil applies the NotNil predicate on the "length" field.
func LengthNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldLength))
}

// DepthEQ applies the EQ predicate on the "depth" field.
func DepthEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDepth, v))
}

// DepthNEQ applies the NEQ predicate on the "depth" field.
func DepthNEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDepth, v))
}

// DepthIn applies the In predicate on the "depth" field.
func DepthIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDepth, vs...))
}

// DepthNotIn applies the NotIn predicate on the "depth" field.
func DepthNotIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDepth, vs...))
}

// DepthGT applies the GT predicate on the "depth" field.
func DepthGT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDepth, v))
}

// DepthGTE applies the GTE predicate on the "depth" field.
func DepthGTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDepth, v))
}

// DepthLT applies the LT predicate on the "depth" field.
func DepthLT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDepth, v))
}

// DepthLTE applies the LTE predicate on the "depth" field.
func DepthLTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDepth, v))
}

// DepthIsNil applies the IsNil predicate on the "depth" field.
func DepthIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDepth))
}

// DepthNotNil applies the NotNil predicate on the "depth" field.
func DepthNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDepth))
}

// DiameterEQ applies the EQ predicate on the "diameter" field.
func DiameterEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDiameter, v))
}

// DiameterNEQ applies the NEQ predicate on the "diameter" field.
func DiameterNEQ(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDiameter, v))
}

// DiameterIn applies the In predicate on the "diameter" field.
func DiameterIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDiameter, vs...))
}

// DiameterNotIn applies the NotIn predicate on the "diameter" field.
func DiameterNotIn(vs ...float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDiameter, vs...))
}

// DiameterGT applies the GT predicate on the "diameter" field.
func DiameterGT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDiameter, v))
}

// DiameterGTE applies the GTE predicate on the "diameter" field.
func DiameterGTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDiameter, v))
}

// DiameterLT applies the LT predicate on the "diameter" field.
func DiameterLT(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDiameter, v))
}

// DiameterLTE applies the LTE predicate on the "diameter" field.
func DiameterLTE(v float64) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDiameter, v))
}

// DiameterIsNil applies the IsNil predicate on the "diameter" field.
func DiameterIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDiameter))
}

// DiameterNotNil applies the NotNil predicate on the "diameter" field.
func DiameterNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDiameter))
}

// WeightEQ applies the EQ predicate on the "weight" field.
func WeightEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldWeight, v))
}

// WeightNEQ applies the NEQ predicate on the "weight" field.
func WeightNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldWeight, v))
}

// WeightIn applies the In predicate on the "weight" field.
func WeightIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldWeight, vs...))
}

// WeightNotIn applies the NotIn predicate on the "weight" field.
func WeightNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldWeight, vs...))
}

// WeightGT applies the GT predicate on the "weight" field.
func WeightGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldWeight, v))
}

// WeightGTE applies the GTE predicate on the "weight" field.
func WeightGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldWeight, v))
}

// WeightLT applies the LT predicate on the "weight" field.
func WeightLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldWeight, v))
}

// WeightLTE applies the LTE predicate on the "weight" field.
func WeightLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldWeight, v))
}

// WeightContains applies the Contains predicate on the "weight" field.
func WeightContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldWeight, v))
}

// WeightHasPrefix applies the HasPrefix predicate on the "weight" field.
func WeightHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldWeight, v))
}

// WeightHasSuffix applies the HasSuffix predicate on the "weight" field.
func WeightHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldWeight, v))
}

// WeightIsNil applies the IsNil predicate on the "weight" field.
func WeightIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldWeight))
}

// WeightNotNil applies the NotNil predicate on the "weight" field.
func WeightNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldWeight))
}

// WeightEqualFold applies the EqualFold predicate on the "weight" field.
func WeightEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldWeight, v))
}

// WeightContainsFold applies the ContainsFold predicate on the "weight" field.
func WeightContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldWeight, v))
}

// DimensionsEQ applies the EQ predicate on the "dimensions" field.
func DimensionsEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDimensions, v))
}

// DimensionsNEQ applies the NEQ predicate on the "dimensions" field.
func DimensionsNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDimensions, v))
}

// DimensionsIn applies the In predicate on the "dimensions" field.
func DimensionsIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDimensions, vs...))
}

// DimensionsNotIn applies the NotIn predicate on the "dimensions" field.
func DimensionsNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDimensions, vs...))
}

// DimensionsGT applies the GT predicate on the "dimensions" field.
func DimensionsGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDimensions, v))
}

// DimensionsGTE applies the GTE predicate on the "dimensions" field.
func DimensionsGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDimensions, v))
}

// DimensionsLT applies the LT predicate on the "dimensions" field.
func DimensionsLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDimensions, v))
}

// DimensionsLTE applies the LTE predicate on the "dimensions" field.
func DimensionsLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDimensions, v))
}

// DimensionsContains applies the Contains predicate on the "dimensions" field.
func DimensionsContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldDimensions, v))
}

// DimensionsHasPrefix applies the HasPrefix predicate on the "dimensions" field.
func DimensionsHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldDimensions, v))
}

// DimensionsHasSuffix applies the HasSuffix predicate on the "dimensions" field.
func DimensionsHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldDimensions, v))
}

// DimensionsIsNil applies the IsNil predicate on the "dimensions" field.
func DimensionsIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDimensions))
}

// DimensionsNotNil applies the NotNil predicate on the "dimensions" field.
func DimensionsNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDimensions))
}

// DimensionsEqualFold applies the EqualFold predicate on the "dimensions" field.
func DimensionsEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldDimensions, v))
}

// DimensionsContainsFold applies the ContainsFold predicate on the "dimensions" field.
func DimensionsContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldDimensions, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldDeletedBy, v))
}

// NumberEQ applies the EQ predicate on the "number" field.
func NumberEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldNumber, v))
}

// NumberNEQ applies the NEQ predicate on the "number" field.
func NumberNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldNumber, v))
}

// NumberIn applies the In predicate on the "number" field.
func NumberIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldNumber, vs...))
}

// NumberNotIn applies the NotIn predicate on the "number" field.
func NumberNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldNumber, vs...))
}

// NumberGT applies the GT predicate on the "number" field.
func NumberGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldNumber, v))
}

// NumberGTE applies the GTE predicate on the "number" field.
func NumberGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldNumber, v))
}

// NumberLT applies the LT predicate on the "number" field.
func NumberLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldNumber, v))
}

// NumberLTE applies the LTE predicate on the "number" field.
func NumberLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldNumber, v))
}

// NumberContains applies the Contains predicate on the "number" field.
func NumberContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldNumber, v))
}

// NumberHasPrefix applies the HasPrefix predicate on the "number" field.
func NumberHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldNumber, v))
}

// NumberHasSuffix applies the HasSuffix predicate on the "number" field.
func NumberHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldNumber, v))
}

// NumberIsNil applies the IsNil predicate on the "number" field.
func NumberIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldNumber))
}

// NumberNotNil applies the NotNil predicate on the "number" field.
func NumberNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldNumber))
}

// NumberEqualFold applies the EqualFold predicate on the "number" field.
func NumberEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldNumber, v))
}

// NumberContainsFold applies the ContainsFold predicate on the "number" field.
func NumberContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldNumber, v))
}

// OrientationEQ applies the EQ predicate on the "orientation" field.
func OrientationEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldOrientation, v))
}

// OrientationNEQ applies the NEQ predicate on the "orientation" field.
func OrientationNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldOrientation, v))
}

// OrientationIn applies the In predicate on the "orientation" field.
func OrientationIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldOrientation, vs...))
}

// OrientationNotIn applies the NotIn predicate on the "orientation" field.
func OrientationNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldOrientation, vs...))
}

// OrientationGT applies the GT predicate on the "orientation" field.
func OrientationGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldOrientation, v))
}

// OrientationGTE applies the GTE predicate on the "orientation" field.
func OrientationGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldOrientation, v))
}

// OrientationLT applies the LT predicate on the "orientation" field.
func OrientationLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldOrientation, v))
}

// OrientationLTE applies the LTE predicate on the "orientation" field.
func OrientationLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldOrientation, v))
}

// OrientationContains applies the Contains predicate on the "orientation" field.
func OrientationContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldOrientation, v))
}

// OrientationHasPrefix applies the HasPrefix predicate on the "orientation" field.
func OrientationHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldOrientation, v))
}

// OrientationHasSuffix applies the HasSuffix predicate on the "orientation" field.
func OrientationHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldOrientation, v))
}

// OrientationIsNil applies the IsNil predicate on the "orientation" field.
func OrientationIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldOrientation))
}

// OrientationNotNil applies the NotNil predicate on the "orientation" field.
func OrientationNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldOrientation))
}

// OrientationEqualFold applies the EqualFold predicate on the "orientation" field.
func OrientationEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldOrientation, v))
}

// OrientationContainsFold applies the ContainsFold predicate on the "orientation" field.
func OrientationContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldOrientation, v))
}

// PositionEQ applies the EQ predicate on the "position" field.
func PositionEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPosition, v))
}

// PositionNEQ applies the NEQ predicate on the "position" field.
func PositionNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldPosition, v))
}

// PositionIn applies the In predicate on the "position" field.
func PositionIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldPosition, vs...))
}

// PositionNotIn applies the NotIn predicate on the "position" field.
func PositionNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldPosition, vs...))
}

// PositionGT applies the GT predicate on the "position" field.
func PositionGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldPosition, v))
}

// PositionGTE applies the GTE predicate on the "position" field.
func PositionGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldPosition, v))
}

// PositionLT applies the LT predicate on the "position" field.
func PositionLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldPosition, v))
}

// PositionLTE applies the LTE predicate on the "position" field.
func PositionLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldPosition, v))
}

// PositionContains applies the Contains predicate on the "position" field.
func PositionContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldPosition, v))
}

// PositionHasPrefix applies the HasPrefix predicate on the "position" field.
func PositionHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldPosition, v))
}

// PositionHasSuffix applies the HasSuffix predicate on the "position" field.
func PositionHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldPosition, v))
}

// PositionIsNil applies the IsNil predicate on the "position" field.
func PositionIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldPosition))
}

// PositionNotNil applies the NotNil predicate on the "position" field.
func PositionNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldPosition))
}

// PositionEqualFold applies the EqualFold predicate on the "position" field.
func PositionEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldPosition, v))
}

// PositionContainsFold applies the ContainsFold predicate on the "position" field.
func PositionContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldPosition, v))
}

// GeometricShapeEQ applies the EQ predicate on the "geometric_shape" field.
func GeometricShapeEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldGeometricShape, v))
}

// GeometricShapeNEQ applies the NEQ predicate on the "geometric_shape" field.
func GeometricShapeNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldGeometricShape, v))
}

// GeometricShapeIn applies the In predicate on the "geometric_shape" field.
func GeometricShapeIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldGeometricShape, vs...))
}

// GeometricShapeNotIn applies the NotIn predicate on the "geometric_shape" field.
func GeometricShapeNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldGeometricShape, vs...))
}

// GeometricShapeGT applies the GT predicate on the "geometric_shape" field.
func GeometricShapeGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldGeometricShape, v))
}

// GeometricShapeGTE applies the GTE predicate on the "geometric_shape" field.
func GeometricShapeGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldGeometricShape, v))
}

// GeometricShapeLT applies the LT predicate on the "geometric_shape" field.
func GeometricShapeLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldGeometricShape, v))
}

// GeometricShapeLTE applies the LTE predicate on the "geometric_shape" field.
func GeometricShapeLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldGeometricShape, v))
}

// GeometricShapeContains applies the Contains predicate on the "geometric_shape" field.
func GeometricShapeContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldGeometricShape, v))
}

// GeometricShapeHasPrefix applies the HasPrefix predicate on the "geometric_shape" field.
func GeometricShapeHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldGeometricShape, v))
}

// GeometricShapeHasSuffix applies the HasSuffix predicate on the "geometric_shape" field.
func GeometricShapeHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldGeometricShape, v))
}

// GeometricShapeIsNil applies the IsNil predicate on the "geometric_shape" field.
func GeometricShapeIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldGeometricShape))
}

// GeometricShapeNotNil applies the NotNil predicate on the "geometric_shape" field.
func GeometricShapeNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldGeometricShape))
}

// GeometricShapeEqualFold applies the EqualFold predicate on the "geometric_shape" field.
func GeometricShapeEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldGeometricShape, v))
}

// GeometricShapeContainsFold applies the ContainsFold predicate on the "geometric_shape" field.
func GeometricShapeContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldGeometricShape, v))
}

// PlanePreservationEQ applies the EQ predicate on the "plane_preservation" field.
func PlanePreservationEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPlanePreservation, v))
}

// PlanePreservationNEQ applies the NEQ predicate on the "plane_preservation" field.
func PlanePreservationNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldPlanePreservation, v))
}

// PlanePreservationIn applies the In predicate on the "plane_preservation" field.
func PlanePreservationIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldPlanePreservation, vs...))
}

// PlanePreservationNotIn applies the NotIn predicate on the "plane_preservation" field.
func PlanePreservationNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldPlanePreservation, vs...))
}

// PlanePreservationGT applies the GT predicate on the "plane_preservation" field.
func PlanePreservationGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldPlanePreservation, v))
}

// PlanePreservationGTE applies the GTE predicate on the "plane_preservation" field.
func PlanePreservationGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldPlanePreservation, v))
}

// PlanePreservationLT applies the LT predicate on the "plane_preservation" field.
func PlanePreservationLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldPlanePreservation, v))
}

// PlanePreservationLTE applies the LTE predicate on the "plane_preservation" field.
func PlanePreservationLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldPlanePreservation, v))
}

// PlanePreservationContains applies the Contains predicate on the "plane_preservation" field.
func PlanePreservationContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldPlanePreservation, v))
}

// PlanePreservationHasPrefix applies the HasPrefix predicate on the "plane_preservation" field.
func PlanePreservationHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldPlanePreservation, v))
}

// PlanePreservationHasSuffix applies the HasSuffix predicate on the "plane_preservation" field.
func PlanePreservationHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldPlanePreservation, v))
}

// PlanePreservationIsNil applies the IsNil predicate on the "plane_preservation" field.
func PlanePreservationIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldPlanePreservation))
}

// PlanePreservationNotNil applies the NotNil predicate on the "plane_preservation" field.
func PlanePreservationNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldPlanePreservation))
}

// PlanePreservationEqualFold applies the EqualFold predicate on the "plane_preservation" field.
func PlanePreservationEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldPlanePreservation, v))
}

// PlanePreservationContainsFold applies the ContainsFold predicate on the "plane_preservation" field.
func PlanePreservationContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldPlanePreservation, v))
}

// PhotoCodeEQ applies the EQ predicate on the "photo_code" field.
func PhotoCodeEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldPhotoCode, v))
}

// PhotoCodeNEQ applies the NEQ predicate on the "photo_code" field.
func PhotoCodeNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldPhotoCode, v))
}

// PhotoCodeIn applies the In predicate on the "photo_code" field.
func PhotoCodeIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldPhotoCode, vs...))
}

// PhotoCodeNotIn applies the NotIn predicate on the "photo_code" field.
func PhotoCodeNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldPhotoCode, vs...))
}

// PhotoCodeGT applies the GT predicate on the "photo_code" field.
func PhotoCodeGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldPhotoCode, v))
}

// PhotoCodeGTE applies the GTE predicate on the "photo_code" field.
func PhotoCodeGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldPhotoCode, v))
}

// PhotoCodeLT applies the LT predicate on the "photo_code" field.
func PhotoCodeLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldPhotoCode, v))
}

// PhotoCodeLTE applies the LTE predicate on the "photo_code" field.
func PhotoCodeLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldPhotoCode, v))
}

// PhotoCodeContains applies the Contains predicate on the "photo_code" field.
func PhotoCodeContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldPhotoCode, v))
}

// PhotoCodeHasPrefix applies the HasPrefix predicate on the "photo_code" field.
func PhotoCodeHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldPhotoCode, v))
}

// PhotoCodeHasSuffix applies the HasSuffix predicate on the "photo_code" field.
func PhotoCodeHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldPhotoCode, v))
}

// PhotoCodeIsNil applies the IsNil predicate on the "photo_code" field.
func PhotoCodeIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldPhotoCode))
}

// PhotoCodeNotNil applies the NotNil predicate on the "photo_code" field.
func PhotoCodeNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldPhotoCode))
}

// PhotoCodeEqualFold applies the EqualFold predicate on the "photo_code" field.
func PhotoCodeEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldPhotoCode, v))
}

// PhotoCodeContainsFold applies the ContainsFold predicate on the "photo_code" field.
func PhotoCodeContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldPhotoCode, v))
}

// AccountingDocumentationInformationEQ applies the EQ predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationNEQ applies the NEQ predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationNEQ(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationIn applies the In predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldAccountingDocumentationInformation, vs...))
}

// AccountingDocumentationInformationNotIn applies the NotIn predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationNotIn(vs ...string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldAccountingDocumentationInformation, vs...))
}

// AccountingDocumentationInformationGT applies the GT predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationGT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationGTE applies the GTE predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationGTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationLT applies the LT predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationLT(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationLTE applies the LTE predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationLTE(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationContains applies the Contains predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationContains(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContains(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationHasPrefix applies the HasPrefix predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationHasPrefix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasPrefix(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationHasSuffix applies the HasSuffix predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationHasSuffix(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldHasSuffix(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationIsNil applies the IsNil predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldAccountingDocumentationInformation))
}

// AccountingDocumentationInformationNotNil applies the NotNil predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldAccountingDocumentationInformation))
}

// AccountingDocumentationInformationEqualFold applies the EqualFold predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationEqualFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEqualFold(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationInformationContainsFold applies the ContainsFold predicate on the "accounting_documentation_information" field.
func AccountingDocumentationInformationContainsFold(v string) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldContainsFold(FieldAccountingDocumentationInformation, v))
}

// AccountingDocumentationDateEQ applies the EQ predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateNEQ applies the NEQ predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateNEQ(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateIn applies the In predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldAccountingDocumentationDate, vs...))
}

// AccountingDocumentationDateNotIn applies the NotIn predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateNotIn(vs ...time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldAccountingDocumentationDate, vs...))
}

// AccountingDocumentationDateGT applies the GT predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateGT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateGTE applies the GTE predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateGTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateLT applies the LT predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateLT(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateLTE applies the LTE predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateLTE(v time.Time) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldAccountingDocumentationDate, v))
}

// AccountingDocumentationDateIsNil applies the IsNil predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldAccountingDocumentationDate))
}

// AccountingDocumentationDateNotNil applies the NotNil predicate on the "accounting_documentation_date" field.
func AccountingDocumentationDateNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldAccountingDocumentationDate))
}

// GeometryEQ applies the EQ predicate on the "geometry" field.
func GeometryEQ(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldEQ(FieldGeometry, v))
}

// GeometryNEQ applies the NEQ predicate on the "geometry" field.
func GeometryNEQ(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNEQ(FieldGeometry, v))
}

// GeometryIn applies the In predicate on the "geometry" field.
func GeometryIn(vs ...types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIn(FieldGeometry, vs...))
}

// GeometryNotIn applies the NotIn predicate on the "geometry" field.
func GeometryNotIn(vs ...types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotIn(FieldGeometry, vs...))
}

// GeometryGT applies the GT predicate on the "geometry" field.
func GeometryGT(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGT(FieldGeometry, v))
}

// GeometryGTE applies the GTE predicate on the "geometry" field.
func GeometryGTE(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldGTE(FieldGeometry, v))
}

// GeometryLT applies the LT predicate on the "geometry" field.
func GeometryLT(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLT(FieldGeometry, v))
}

// GeometryLTE applies the LTE predicate on the "geometry" field.
func GeometryLTE(v types.Geometry) predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldLTE(FieldGeometry, v))
}

// GeometryIsNil applies the IsNil predicate on the "geometry" field.
func GeometryIsNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldIsNull(FieldGeometry))
}

// GeometryNotNil applies the NotNil predicate on the "geometry" field.
func GeometryNotNil() predicate.Petroglyph {
	return predicate.Petroglyph(sql.FieldNotNull(FieldGeometry))
}

// HasCulturalAffiliation applies the HasEdge predicate on the "cultural_affiliation" edge.
func HasCulturalAffiliation() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CulturalAffiliationTable, CulturalAffiliationColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCulturalAffiliationWith applies the HasEdge predicate on the "cultural_affiliation" edge with a given conditions (other predicates).
func HasCulturalAffiliationWith(preds ...predicate.Culture) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newCulturalAffiliationStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasModel applies the HasEdge predicate on the "model" edge.
func HasModel() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ModelTable, ModelColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasModelWith applies the HasEdge predicate on the "model" edge with a given conditions (other predicates).
func HasModelWith(preds ...predicate.Model) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newModelStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasMound applies the HasEdge predicate on the "mound" edge.
func HasMound() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MoundTable, MoundColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMoundWith applies the HasEdge predicate on the "mound" edge with a given conditions (other predicates).
func HasMoundWith(preds ...predicate.Mound) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newMoundStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPublications applies the HasEdge predicate on the "publications" edge.
func HasPublications() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, PublicationsTable, PublicationsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPublicationsWith applies the HasEdge predicate on the "publications" edge with a given conditions (other predicates).
func HasPublicationsWith(preds ...predicate.Publication) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newPublicationsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasTechniques applies the HasEdge predicate on the "techniques" edge.
func HasTechniques() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, TechniquesTable, TechniquesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTechniquesWith applies the HasEdge predicate on the "techniques" edge with a given conditions (other predicates).
func HasTechniquesWith(preds ...predicate.Technique) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newTechniquesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRegion applies the HasEdge predicate on the "region" edge.
func HasRegion() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, RegionTable, RegionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRegionWith applies the HasEdge predicate on the "region" edge with a given conditions (other predicates).
func HasRegionWith(preds ...predicate.Region) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newRegionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasAccountingDocumentationAddress applies the HasEdge predicate on the "accounting_documentation_address" edge.
func HasAccountingDocumentationAddress() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AccountingDocumentationAddressTable, AccountingDocumentationAddressColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAccountingDocumentationAddressWith applies the HasEdge predicate on the "accounting_documentation_address" edge with a given conditions (other predicates).
func HasAccountingDocumentationAddressWith(preds ...predicate.Location) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newAccountingDocumentationAddressStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasAccountingDocumentationAuthor applies the HasEdge predicate on the "accounting_documentation_author" edge.
func HasAccountingDocumentationAuthor() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AccountingDocumentationAuthorTable, AccountingDocumentationAuthorColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAccountingDocumentationAuthorWith applies the HasEdge predicate on the "accounting_documentation_author" edge with a given conditions (other predicates).
func HasAccountingDocumentationAuthorWith(preds ...predicate.Person) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newAccountingDocumentationAuthorStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCollection applies the HasEdge predicate on the "collection" edge.
func HasCollection() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CollectionTable, CollectionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCollectionWith applies the HasEdge predicate on the "collection" edge with a given conditions (other predicates).
func HasCollectionWith(preds ...predicate.Collection) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newCollectionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPersonalCollection applies the HasEdge predicate on the "personal_collection" edge.
func HasPersonalCollection() predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, PersonalCollectionTable, PersonalCollectionPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPersonalCollectionWith applies the HasEdge predicate on the "personal_collection" edge with a given conditions (other predicates).
func HasPersonalCollectionWith(preds ...predicate.PersonalCollection) predicate.Petroglyph {
	return predicate.Petroglyph(func(s *sql.Selector) {
		step := newPersonalCollectionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Petroglyph) predicate.Petroglyph {
	return predicate.Petroglyph(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Petroglyph) predicate.Petroglyph {
	return predicate.Petroglyph(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Petroglyph) predicate.Petroglyph {
	return predicate.Petroglyph(sql.NotPredicates(p))
}
